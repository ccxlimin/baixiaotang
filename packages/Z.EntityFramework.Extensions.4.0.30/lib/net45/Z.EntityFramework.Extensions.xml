<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Z.EntityFramework.Extensions</name>
    </assembly>
    <members>
        <member name="T:Z.EntityFramework.Extensions.Shared.BatchSaveChanges.BatchSaveChangesOptions">
            <summary>The BatchSaveChangesOptions class.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Shared.BatchSaveChanges.BatchSaveChangesOptions.BatchSize">
            <summary>The maximum number of command to batches in one command during a BatchSaveChanges.</summary>
        </member>
        <member name="T:Z.EntityFramework.Extensions.EntityBulkOperation">
            <summary>An entity bulk operation.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="T:Z.EntityFramework.Extensions.EntityBulkOperation`1">
            <summary>An entity bulk operation.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityBulkOperation`1.DataTableBatchSize">
            <summary>Gets or sets the size of the data table in the batch.</summary>
            <value>The size of the data table in the batch.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityBulkOperation`1.#ctor(System.Data.Entity.DbContext)">
            <summary>Constructor.</summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityBulkOperation`1.#ctor(System.Data.Entity.DbContext,System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{`0}})">
            <summary>Constructor.</summary>
            <param name="context">The context.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityBulkOperation`1.#ctor(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{`0})">
            <summary>Constructor.</summary>
            <param name="context">The context.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityBulkOperation`1.#ctor(System.Data.Entity.DbContext,System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{`0}},System.Collections.Generic.IEnumerable{`0})">
            <summary>Constructor.</summary>
            <param name="context">The context.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityBulkOperation`1.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting
                unmanaged resources.
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityBulkOperation`1.BulkDelete">
            <summary>Execute a Bulk Delete operation.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityBulkOperation`1.BulkDelete(System.Collections.Generic.IEnumerable{`0})">
            <summary>Execute a Bulk Delete operation.</summary>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityBulkOperation`1.BulkInsert">
            <summary>Execute a Bulk Insert operation.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityBulkOperation`1.BulkInsert(System.Collections.Generic.IEnumerable{`0})">
            <summary>Execute a Bulk Insert operation.</summary>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityBulkOperation`1.BulkUpdate">
            <summary>Execute a Bulk Update operation.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityBulkOperation`1.BulkUpdate(System.Collections.Generic.IEnumerable{`0})">
            <summary>Execute a Bulk Update operation.</summary>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityBulkOperation`1.BulkMerge">
            <summary>Execute a Bulk Merge operation.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityBulkOperation`1.BulkMerge(System.Collections.Generic.IEnumerable{`0})">
            <summary>Execute a Bulk Merge operation.</summary>
            <param name="entities">The entities.</param>
        </member>
        <member name="T:Z.EntityFramework.Extensions.EntityDatabase">
            <summary>An entity database.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityDatabase.BulkDelete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>Bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityDatabase.BulkDelete``1(System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>Bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityDatabase.BulkInsert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>Bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityDatabase.BulkInsert``1(System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>Bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityDatabase.BulkMerge``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>Bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityDatabase.BulkMerge``1(System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>Bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityDatabase.BulkSynchronize``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>Bulk Synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityDatabase.BulkSynchronize``1(System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>Bulk Synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityDatabase.BulkUpdate``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>Bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityDatabase.BulkUpdate``1(System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>Bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityDatabase.Context">
            <summary>Gets or sets the context beyond the database.</summary>
            <value>The context.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Infrastructure.DbModel">
            <summary>A data Model for the database.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Infrastructure.DbModel.ConceptualModel">
            <summary>Gets or sets the conceptual model.</summary>
            <value>The conceptual model.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Infrastructure.DbModel.StoreModel">
            <summary>Gets or sets the store model.</summary>
            <value>The store model.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Infrastructure.DbModel.MappingModel">
            <summary>Gets or sets the mapping model.</summary>
            <value>The mapping model.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.Core.Infrastructure.DbModel.Entity``1">
            <summary>Gets the entity.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <returns>A T.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Mapping.AssociationSetMapping">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.AssociationSetMapping.ConceptualAssociationSet">
            <summary>Gets or sets the set the conceptual association belongs to.</summary>
            <value>The conceptual association set.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.AssociationSetMapping.StoreEntitySet">
            <summary>Gets or sets the set the store entity belongs to.</summary>
            <value>The store entity set.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.AssociationSetMapping.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.AssociationSetMapping.TypeName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.AssociationSetMapping.StoreEntitySetName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the store entity set.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.AssociationSetMapping.EndProperties">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The end properties.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Mapping.ComplexPropertyMapping">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ComplexPropertyMapping.ComplexEntityType">
            <summary>Gets or sets the type of the complex entity.</summary>
            <value>The type of the complex entity.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ComplexPropertyMapping.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ComplexPropertyMapping.TypeName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ComplexPropertyMapping.ScalarProperties">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The scalar properties.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ComplexPropertyMapping.ComplexProperties">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The complex properties.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Mapping.ConditionPropertyMapping">
            <summary>A condition property mapping.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ConditionPropertyMapping.Value">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ConditionPropertyMapping.ColumnName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the column.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Mapping.EndPropertyMapping">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.Core.Mapping.EndPropertyMapping.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EndPropertyMapping.ConceptualAssociationSetEnd">
            <summary>Gets or sets the conceptual association set end.</summary>
            <value>The conceptual association set end.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EndPropertyMapping.ScalarAccessors">
            <summary>Gets or sets the scalar accessors.</summary>
            <value>The scalar accessors.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EndPropertyMapping.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EndPropertyMapping.ScalarProperties">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The scalar properties.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Mapping.EntityContainerMapping">
            <summary>An entity container mapping.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EntityContainerMapping.StorageEntityContainer">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The storage entity container.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EntityContainerMapping.CdmEntityContainer">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The cdm entity container.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EntityContainerMapping.EntitySetMappings">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The entity set mappings.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EntityContainerMapping.AssociationSetMappings">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The association set mappings.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Mapping.EntitySetMapping">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.Core.Mapping.EntitySetMapping.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EntitySetMapping.ConceptualSet">
            <summary>Gets or sets the set the conceptual belongs to.</summary>
            <value>The conceptual set.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EntitySetMapping.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EntitySetMapping.EntityTypeMappings">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The entity type mappings.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Mapping.EntityTypeMapping">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EntityTypeMapping.EntityType">
            <summary>Gets or sets the type of the entity.</summary>
            <value>The type of the entity.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EntityTypeMapping.TypeName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EntityTypeMapping.MappingFragment">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The mapping fragment.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.EntityTypeMapping.ModificationFunctionMapping">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The mapping fragment.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Mapping.FunctionMapping">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Mapping.MappingFragment">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.Core.Mapping.MappingFragment.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.MappingFragment.StoreEntitySet">
            <summary>Gets or sets the set the store entity belongs to.</summary>
            <value>The store entity set.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.MappingFragment.ScalarAccessors">
            <summary>Gets or sets the scalar accessors.</summary>
            <value>The scalar accessors.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.MappingFragment.StoreEntitySetName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the store entity set.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.MappingFragment.ScalarProperties">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The scalar properties.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.MappingFragment.ComplexProperties">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The complex properties.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.MappingFragment.Conditions">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The conditions.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Mapping.ModificationFunctionMapping">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping">
            <summary>A scalar accessor mapping.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.IsComputed">
            <summary>Gets or sets a value indicating whether this object is computed.</summary>
            <value>true if this object is computed, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.UseIsNullColumn">
            <summary>Gets or sets a value indicating whether this object use is null column.</summary>
            <value>true if use is null column, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.AccessorPath">
            <summary>Gets or sets the full pathname of the accessor file.</summary>
            <value>The full pathname of the accessor file.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.ColumnName">
            <summary>Gets or sets the name of the column.</summary>
            <value>The name of the column.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.Type">
            <summary>Gets or sets the type.</summary>
            <value>The type.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.IsStorageMapped">
            <summary>Gets or sets a value indicating whether this object is storage mapped.</summary>
            <value>true if this object is storage mapped, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.IsKey">
            <summary>Gets or sets a value indicating whether this object is key.</summary>
            <value>true if this object is key, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.ConstantValue">
            <summary>Gets or sets the constant value.</summary>
            <value>The constant value.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.GetValue(System.Object)">
            <summary>Gets a value.</summary>
            <param name="obj">The object.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Z.EntityFramework.Extensions.Core.Mapping.ScalarAccessorMapping.SetValue(System.Object,System.Object)">
            <summary>Sets a value.</summary>
            <param name="obj">The object.</param>
            <param name="valueItem">The value item.</param>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Mapping.ScalarPropertyMapping">
            <summary>A scalar property mapping.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarPropertyMapping.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarPropertyMapping.ColumnName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the column.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.ScalarPropertyMapping.ParameterName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the column.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.Mapping.SchemaMapping">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.SchemaMapping.Space">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The space.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.Mapping.SchemaMapping.EntityContainerMappings">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399202(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The entity container mapping.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainer">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="F:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainer.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainer.LazyLoadingEnabled">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>true if lazy loading enabled, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainer.EntitySets">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The entity sets.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainer.AssociationSets">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The association sets.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerAssociationSet">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerAssociationSet.AssociationSetMapping">
            <summary>Gets or sets the association set mapping.</summary>
            <value>The association set mapping.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerAssociationSet.Association">
            <summary>Gets or sets the association.</summary>
            <value>The association.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerAssociationSet.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerAssociationSet.AssociationName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the association.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerAssociationSet.Ends">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The ends.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerAssociationSetEnd">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerAssociationSetEnd.EntitySet">
            <summary>Gets or sets the set the entity belongs to.</summary>
            <value>The entity set.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerAssociationSetEnd.AssociationEnd">
            <summary>Gets or sets the association end.</summary>
            <value>The association end.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerAssociationSetEnd.AssociationEndMapping">
            <summary>Gets or sets the association end mapping.</summary>
            <value>The association end mapping.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerAssociationSetEnd.Role">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The role.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerAssociationSetEnd.EntitySetName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the entity set.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerEntitySet">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerEntitySet.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerEntitySet.IsTPC">
            <summary>Gets or sets a value indicating whether this object is tpc.</summary>
            <value>true if this object is tpc, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerEntitySet.IsTPH">
            <summary>Gets or sets a value indicating whether this object is tph.</summary>
            <value>true if this object is tph, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerEntitySet.IsTPT">
            <summary>Gets or sets a value indicating whether this object is tpt.</summary>
            <value>true if this object is tpt, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerEntitySet.EntitySetMapping">
            <summary>Gets or sets the entity set mapping.</summary>
            <value>The entity set mapping.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerEntitySet.EntityType">
            <summary>Gets or sets the type of the entity.</summary>
            <value>The type of the entity.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerEntitySet.AssociationSetEnds">
            <summary>Gets or sets the association set ends.</summary>
            <value>The association set ends.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerEntitySet.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerEntitySet.EntityTypeName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the entity type.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerEntitySet.Schema">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The schema.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerEntitySet.Type">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityContainerEntitySet.Table">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The table.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityKeyElement">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.EntityKeyElement.PropertyRefs">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The property references.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Function">
            <summary>A schema.</summary>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.NavigationProperty">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.NavigationProperty.ParentEntity">
            <summary>Gets or sets the parent entity.</summary>
            <value>The parent entity.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.NavigationProperty.Association">
            <summary>Gets or sets the association.</summary>
            <value>The association.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.NavigationProperty.FromRoleEnd">
            <summary>Gets or sets from role end.</summary>
            <value>from role end.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.NavigationProperty.ToRoleEnd">
            <summary>Gets or sets to role end.</summary>
            <value>to role end.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.NavigationProperty.IsForeignKey">
            <summary>Gets or sets a value indicating whether this object is foreign key.</summary>
            <value>true if this object is foreign key, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.NavigationProperty.FromRole">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>from role.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.NavigationProperty.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.NavigationProperty.Relationship">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The relationship.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.NavigationProperty.ToRole">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>to role.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.OnOperation">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.OnOperation.Action">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The action.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.ParentEntity">
            <summary>Gets or sets the parent entity.</summary>
            <value>The parent entity.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.IsConcurrency">
            <summary>Gets or sets the is concurrency.</summary>
            <value>The is concurrency.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.IsComplex">
            <summary>Gets or sets a value indicating whether this object is complex.</summary>
            <value>true if this object is complex, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.ComplexType">
            <summary>Gets or sets the type of the complex.</summary>
            <value>The type of the complex.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.IsEnum">
            <summary>Gets or sets a value indicating whether this object is enum.</summary>
            <value>true if this object is enum, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.EnumType">
            <summary>Gets or sets the type of the enum.</summary>
            <value>The type of the enum.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.Type">
            <summary>Gets or sets the type.</summary>
            <value>The type.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.IsPrimaryKey">
            <summary>Gets or sets a value indicating whether this object is primary key.</summary>
            <value>true if this object is primary key, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.IsComputed">
            <summary>Gets or sets a value indicating whether this object is computed.</summary>
            <value>true if this object is computed, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.TypeName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.Nullable">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>true if nullable, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.StoreGeneratedPattern">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The store generated pattern.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.Unicode">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>true if unicode, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.FixedLength">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>true if fixed length, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.MaxLength">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The length of the maximum.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.Precision">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The precision.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.Scale">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The scale.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Property.ConcurrencyMode">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The concurrency mode.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.PropertyRefElement">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.PropertyRefElement.Property">
            <summary>Gets or sets the property.</summary>
            <value>The property.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.PropertyRefElement.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.ReferentialConstraint">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.ReferentialConstraint.Principal">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The principal.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.ReferentialConstraint.Dependent">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The dependent.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.ReferencialConstraintRoleElement">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.ReferencialConstraintRoleElement.EntityType">
            <summary>Gets or sets the type of the entity.</summary>
            <value>The type of the entity.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.ReferencialConstraintRoleElement.Role">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The role.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.ReferencialConstraintRoleElement.PropertyRefs">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The property references.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Relationship">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Relationship.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Relationship.AssociationSet">
            <summary>Gets or sets the set the association belongs to.</summary>
            <value>The association set.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Relationship.EntityTypes">
            <summary>Gets or sets a list of types of the entities.</summary>
            <value>A list of types of the entities.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Relationship.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Relationship.Ends">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The ends.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Relationship.ReferentialConstraint">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The referential constraint.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.RelationshipEnd">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.RelationshipEnd.AssociationSetEnd">
            <summary>Gets or sets the association set end.</summary>
            <value>The association set end.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.RelationshipEnd.EntityType">
            <summary>Gets or sets the type of the entity.</summary>
            <value>The type of the entity.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.RelationshipEnd.ParentRelationship">
            <summary>Gets or sets the parent relationship.</summary>
            <value>The parent relationship.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.RelationshipEnd.Multiplicity">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The multiplicity.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.RelationshipEnd.Role">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The role.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.RelationshipEnd.Type">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.RelationshipEnd.OnDelete">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The on delete.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Schema">
            <summary>A schema.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Schema.Alias">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The alias.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Schema.Namespace">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The namespace.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Schema.EntityTypes">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>A list of types of the entities.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Schema.Associations">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The associations.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Schema.ComplexTypes">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>A list of types of the complexes.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Schema.EnumTypes">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>A list of types of the enums.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Schema.EntityContainers">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The entity container.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Schema.Provider">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.Schema.ProviderManifestToken">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The provider manifest token.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType.GetClrType(System.Reflection.Assembly)">
            <summary>Gets colour type.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="assembly">The assembly.</param>
            <returns>The colour type.</returns>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType.IsTPC">
            <summary>Gets or sets a value indicating whether this object is tpc.</summary>
            <value>true if this object is tpc, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType.IsTPT">
            <summary>Gets or sets a value indicating whether this object is tpt.</summary>
            <value>true if this object is tpt, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType.IsTPH">
            <summary>Gets or sets a value indicating whether this object is tph.</summary>
            <value>true if this object is tph, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType.EntityTypeMapping">
            <summary>Gets or sets the entity type mapping.</summary>
            <value>The entity type mapping.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType.EntitySet">
            <summary>Gets or sets the set the entity belongs to.</summary>
            <value>The entity set.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType.BaseType">
            <summary>Gets or sets the type of the base.</summary>
            <value>The type of the base.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType.GenericEntitySetMapping">
            <summary>Gets or sets the generic entity set mapping.</summary>
            <value>The generic entity set mapping.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType.Key">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType.Properties">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType.NavigationProperties">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The navigation properties.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType.BaseTypeName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the base type.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType`1">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType`1.Info">
            <summary>Gets or sets the entity.</summary>
            <value>The entity.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Properties the given property expression.</summary>
            <param name="propertyExpression">The property expression.</param>
            <returns>A Property.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEnumMember">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEnumMember.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEnumMember.Value">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEnumType">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEnumType.Type">
            <summary>Gets or sets the type.</summary>
            <value>The type.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEnumType.Name">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEnumType.IsFlags">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>true if this object is flags, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEnumType.UnderlyingTypeName">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The name of the underlying type.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEnumType.Members">
            <summary>
                Please visit the
                <see href="http://msdn.microsoft.com/en-us/library/vstudio/bb399292(v=vs.100).aspx">
                    Microsoft documentation
                </see>
                for more detail.
            </summary>
            <value>The members.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.EntityConnectionContainer">
            <summary>An entity connection container.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityConnectionContainer.#ctor(System.Data.Entity.DbContext)">
            <summary>Constructor.</summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityConnectionContainer.Context">
            <summary>Gets or sets the context.</summary>
            <value>The context.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityConnectionContainer.Connection">
            <summary>Gets or sets the connection.</summary>
            <value>The connection.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityConnectionContainer.Transaction">
            <summary>Gets or sets the transaction.</summary>
            <value>The transaction.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityConnectionContainer.State">
            <summary>Gets the state.</summary>
            <value>The state.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityConnectionContainer.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting
                unmanaged resources.
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityConnectionContainer.Open">
            <summary>Opens this object.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityConnectionContainer.CreateCommand">
            <summary>Creates the command.</summary>
            <returns>The new command.</returns>
        </member>
        <member name="M:Z.EntityFramework.Extensions.MySqlDatabase.#ctor(System.Data.Entity.DbContext)">
            <summary>Constructor.</summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.MySqlDatabase.CreateConnectionContainer">
            <summary>Create a new database connection.</summary>
            <returns>The new connection.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.OracleDevArtDatabase">
            <summary>SQLite database.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.OracleDevArtDatabase.#ctor(System.Data.Entity.DbContext)">
            <summary>Constructor.</summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.OracleDevArtDatabase.CreateConnectionContainer">
            <summary>Create a new database connection.</summary>
            <returns>The new connection.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.PostgreSQLDatabase">
            <summary>Sql database.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.PostgreSQLDatabase.#ctor(System.Data.Entity.DbContext)">
            <summary>Constructor.</summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.PostgreSQLDatabase.CreateConnectionContainer">
            <summary>Create a new database connection.</summary>
            <returns>The new connection.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.SqlCeDatabase">
            <summary>Sql Compact database.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.SqlCeDatabase.#ctor(System.Data.Entity.DbContext)">
            <summary>Constructor.</summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.SqlCeDatabase.CreateConnectionContainer">
            <summary>Create a new database connection.</summary>
            <returns>The new connection.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.SqlDatabase">
            <summary>Sql database.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.SqlDatabase.#ctor(System.Data.Entity.DbContext)">
            <summary>Constructor.</summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Z.EntityFramework.Extensions.SqlDatabase.Connection">
            <summary>Gets the database connection.</summary>
            <value>The connection.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.SqlDatabase.Transaction">
            <summary>Gets the transaction.</summary>
            <value>The transaction.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.SqlDatabase.CreateConnectionContainer">
            <summary>Create a new database connection.</summary>
            <returns>The new connection.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.SQLiteDatabase">
            <summary>SQLite database.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.SQLiteDatabase.#ctor(System.Data.Entity.DbContext)">
            <summary>Constructor.</summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.SQLiteDatabase.CreateConnectionContainer">
            <summary>Create a new database connection.</summary>
            <returns>The new connection.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.EF6Config">
            <summary>An ef 6 configuration.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.ModelName">
            <summary>Name of the model.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.ModelNameFactory">
            <summary>Gets or sets the model name factory.</summary>
            <value>The model name factory.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.IsCommunity">
            <summary>Gets or sets a value indicating whether the library is in community mode (automatically throw an error for all paid features).</summary>
            <value>True if the library is in community mode (automatically throw an error for all paid features).</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.IsEntityFrameworkPlus">
            <summary>
            Gets or sets a value indicating whether Entity Framework Plus is used.
            </summary>
            <value>True if Entity Framework Plus is used.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.BulkOperationBuilder">
            <summary>Set the builder that will apply to all bulk operation instance.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EF6Config.AddLicense(System.String,System.String)">
            <summary>Adds a license key (Multiple license key can be added).</summary>
            <param name="licenseName">Name of the license.</param>
            <param name="licenseKey">The license key.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EF6Config.ValidateLicense(Z.BulkOperations.ProviderType)">
            <summary>Validates if license added is valid.</summary>
            <param name="provider">(Optional) The provider specific for the license.</param>
            <returns>true if it's valid, false if it's invalid.</returns>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EF6Config.ValidateLicense(System.String@,Z.BulkOperations.ProviderType)">
            <summary>Validates if license added is valid.</summary>
            <param name="errorMessage">[out] The error message when the license is invalid.</param>
            <param name="provider">(Optional) The provider specific for the license.</param>
            <returns>true if it's valid, false if it's invalid.</returns>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.BatchSaveChangesOptionsFactory">
            <summary>Set default options that will apply when a BatchSaveChanges is executed.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.UseOldBulkSaveChanges">
            <summary>true to use old bulk save changes.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.Cache">
            <summary>Gets or sets the cache to use.</summary>
            <value>The cache to use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.TmpIsTransientError">
            <summary>Testing Options. Do not use.</summary>
            <value>Testing Options. Do not use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.CustomProvider">
            <summary>Gets or sets the custom provider.</summary>
            <value>The custom provider.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.ForceDatabaseFirst">
            <summary>
                Gets or sets a value indicating whether the current context should be forced to read as database first.
            </summary>
            <value>true if the current context should be forced to read as database first.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.UseToListMemoryOptimized">
            <summary>
            Gets or sets a value indicating whether the method ToListMemoryOptimized will be used instead of ToList to fix some LOH issue.
            </summary>
            <value>True if the method ToListMemoryOptimized will be used instead of ToList to fix some LOH issue.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.ForceSelectOutput">
            <summary>
                Gets or sets a value indicating whether the select output should be forced.
            </summary>
            <value>true if force select output, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.SetDataSourceAddedAction">
            <summary>The set data source for Added EntityState when BulkSaveChanges is called.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.SetDataSourceModifiedAction">
            <summary>The set data source for Modified EntityState when BulkSaveChanges is called.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.SetDataSourceDeletedAction">
            <summary>The set data source for Removed EntityState when BulkSaveChanges is called.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.TmpForceDatabaseFirstSingleModel">
            <summary>Testing Options. Do not use.</summary>
            <value>Testing Options. Do not use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.PreserveTopologicalSortOrder">
            <summary>
            Gets or sets a value indicating whether the library should preserve topological sort order.
            </summary>
            <value>True the library should preserve topological sort order, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.PreserveCommandOrder">
            <summary>
            Gets or sets a value indicating whether the library should preserve topological sort order.
            </summary>
            <value>True the library should preserve topological sort order, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.TmpStoredModelEdmx">
            <summary>Testing Options. Do not use.</summary>
            <value>Testing Options. Do not use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.TmpModelEdmx">
            <summary>Testing Options. Do not use.</summary>
            <value>Testing Options. Do not use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.ModelEdmxFactory">
            <summary>Gets or sets the model edmx factory.</summary>
            <value>A function delegate that yields an XDocument.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.ContextFactory">
            <summary>Gets or sets the context factory. A new context must be created for internal use (DO NOT return the context from parameter).</summary>
            <value>The context factory. A new context must be created for internal use (DO NOT return the context from parameter).</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.SetDataSourceBulkInsertAction">
            <summary>The set data source for bulk insert action.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.PreBatchSaveChanges">
            <summary>Gets or sets an action to perform before the BatchSaveChanges is executed.</summary>
            <value>The action to perform before the BatchSaveChanges is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.PreBulkSaveChanges">
            <summary>Gets or sets an action to perform before the BulkSaveChanges is executed.</summary>
            <value>The action to perform before the BulkSaveChanges is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.PreBulkInsert">
            <summary>Gets or sets an action to perform before the BulkInsert is executed.</summary>
            <value>The action to perform before the BulkInsert is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.PreBulkUpdate">
            <summary>Gets or sets an action to perform before the BulkUpdate is executed.</summary>
            <value>The action to perform before the BulkUpdate is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.PreBulkMerge">
            <summary>Gets or sets an action to perform before the BulkMerge is executed.</summary>
            <value>The action to perform before the BulkMerge is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.PreBulkDelete">
            <summary>Gets or sets an action to perform before the BulkDelete is executed.</summary>
            <value>The action to perform before the BulkDelete is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.PreBulkSynchronize">
            <summary>Gets or sets an action to perform before the BulkSynchronize is executed.</summary>
            <value>The action to perform before the BulkSynchronize is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.LogUniqueIndexIssue">
            <summary>Testing Options. Do not use.</summary>
            <value>Testing Options. Do not use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.ForceTriggerResolution">
            <summary>
                Gets or sets a value indicating whether the trigger resolution should be forced.
            </summary>
            <value>True if force trigger resolution, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.TemporaryStringToTypeAction">
            <summary>Testing Options. Do not use.</summary>
            <value>Testing Options. Do not use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.TemporaryFix_ModelName">
            <summary>Testing Options. Do not use.</summary>
            <value>Testing Options. Do not use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.DefaultEntityFrameworkPropagationValue">
            <summary>
            Gets or sets a value indicating whether the default entity framework propagation should be used (setting it to false improve performance but doesn't support all model).
            </summary>
            <value>True if the default entity framework propagation should be used (setting it to false improve performance but doesn't support all model), false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EF6Config.UseMySqlEntityFrameworkPropagation">
            <summary>
            Gets or sets a value indicating whether the MySql Entity Framework Propagation should be used.
            </summary>
            <value>True if the MySql Entity Framework Propagation should be used, false if not.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EF6Config.TryTopologicalSort``1(System.Object)">
            <summary>
            Internal Public Method
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EF6Config.TryBatchTopologicalSort``1(System.Object)">
            <summary>
            Internal Public Method
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EF6Config.LoadSqlTypeAssembly">
            <summary>Loads SQL type assembly.</summary>
        </member>
        <member name="T:Z.EntityFramework.Extensions.BatchDelete">
            <summary>Class to batch delete.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.BatchDelete.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDelete.BatchSize">
            <summary>Gets or sets the size of the batch.</summary>
            <value>The size of the batch.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDelete.BatchDelayInterval">
            <summary>Gets or sets the batch delay interval in milliseconds (The wait time between batch).</summary>
            <value>The batch delay interval in milliseconds (The wait time between batch).</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDelete.UseTableLock">
            <summary>Gets or sets a value indicating whether the query use table lock.</summary>
            <value>True if use table lock, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDelete.Executing">
            <summary>Gets or sets the DbCommand before being executed.</summary>
            <value>The DbCommand before being executed.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.BatchDelete.Execute``1(System.Linq.IQueryable{``0})">
            <summary>Executes the batch delete operation.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query used to execute the batch operation.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Z.EntityFramework.Extensions.BatchDelete.CreateCommand``1(System.Data.Entity.Core.Objects.ObjectQuery,Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType{``0})">
            <summary>Creates a command to execute the batch operation.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query.</param>
            <param name="entity">The schema entity.</param>
            <param name="visitor">The visitor.</param>
            <returns>The new command to execute the batch operation.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.BatchDeleteManager">
            <summary>Manage EF+ Batch Delete Configuration.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDeleteManager.BatchDeleteBuilder">
            <summary>Gets or sets the batch delete builder to change default configuration.</summary>
            <value>The batch delete builder to change default configuration.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDeleteManager.UseMySqlSchema">
            <summary>Gets or sets a value indicating whether this object use schema for MySQL provider.</summary>
            <value>True if use schema for MySQL provider, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchDeleteManager.IsInMemoryQuery">
            <summary>
            Gets or sets a value indicating whether this object is in memory query.
            </summary>
            <value>True if this object is in memory query, false if not.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.BatchUpdate">
            <summary>Class to batch update.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchUpdate.Executing">
            <summary>Gets or sets the DbCommand before being executed.</summary>
            <value>The DbCommand before being executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchUpdate.UseTableLock">
            <summary>Gets or sets a value indicating whether the query use table lock.</summary>
            <value>True if use table lock, false if not.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.BatchUpdate.Execute``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})">
            <summary>Executes the batch update operation.</summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query used to execute the batch operation.</param>
            <param name="updateFactory">The update factory.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Z.EntityFramework.Extensions.BatchUpdate.CreateCommand``1(System.Data.Entity.Core.Objects.ObjectQuery,Z.EntityFramework.Extensions.Core.SchemaObjectModel.SchemaEntityType{``0},System.Collections.Generic.List{System.Tuple{System.String,System.Object}})">
            <summary>Creates a command to execute the batch operation.</summary>
            <param name="query">The query.</param>
            <param name="entity">The schema entity.</param>
            <returns>The new command to execute the batch operation.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.BatchUpdateManager">
            <summary>Manage EF+ Batch Update Configuration.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchUpdateManager.BatchUpdateBuilder">
            <summary>Gets or sets the batch update builder to change default configuration.</summary>
            <value>The batch update builder to change default configuration.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchUpdateManager.UseMySqlSchema">
            <summary>Gets or sets a value indicating whether this object use schema for MySQL provider.</summary>
            <value>True if use schema for MySQL provider, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.BatchUpdateManager.IsInMemoryQuery">
            <summary>
            Gets or sets a value indicating whether this object is in memory query.
            </summary>
            <value>True if this object is in memory query, false if not.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.BatchUpdateManager.Hook``1(System.Linq.Expressions.Expression{System.Func{``0,``0}})">
            <summary>Adds a hook that will always happen when the BatchUpdate will be called for a specific type.</summary>
            <param name="hook">The hook.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EFPlusDependency.TmpUpdateFromQuery``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows from the query using an
                expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="updateFactory">The update expression.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EFPlusDependency.TmpUpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}},System.Threading.CancellationToken)">
            <summary>
                An IQueryable&lt;T&gt; extension method that updates all rows asynchronously from the query
                using an expression without retrieving entities.
            </summary>
            <typeparam name="T">The type of elements of the query.</typeparam>
            <param name="query">The query to update rows from without retrieving entities.</param>
            <param name="updateFactory">The update factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task with the number of rows affected.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.EntityFrameworkManager">
            <summary>Manager for entity frameworks.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.ModelName">
            <summary>Name of the model.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.ModelNameFactory">
            <summary>Gets or sets the model name factory.</summary>
            <value>The model name factory.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.IsCommunity">
            <summary>Gets or sets a value indicating whether the library is in community mode (automatically throw an error for all paid features).</summary>
            <value>True if the library is in community mode (automatically throw an error for all paid features).</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.IsEntityFrameworkPlus">
            <summary>
            Gets or sets a value indicating whether Entity Framework Plus is used.
            </summary>
            <value>True if Entity Framework Plus is used.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.BulkOperationBuilder">
            <summary>Set the builder that will apply to all bulk operation instance.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.BatchSaveChangesOptionsFactory">
            <summary>Set default options that will apply when a BatchSaveChanges is executed.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.UseOldBulkSaveChanges">
            <summary>true to use old bulk save changes.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.Cache">
            <summary>Gets or sets the cache to use.</summary>
            <value>The cache to use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.TmpIsTransientError">
            <summary>Testing Options. Do not use.</summary>
            <value>Testing Options. Do not use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.CustomProvider">
            <summary>Gets or sets the custom provider.</summary>
            <value>The custom provider.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.ForceDatabaseFirst">
            <summary>
                Gets or sets a value indicating whether the current context should be forced to read as database first.
            </summary>
            <value>true if the current context should be forced to read as database first.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.UseToListMemoryOptimized">
            <summary>
            Gets or sets a value indicating whether the method ToListMemoryOptimized will be used instead of ToList to fix some LOH issue.
            </summary>
            <value>True if the method ToListMemoryOptimized will be used instead of ToList to fix some LOH issue.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.ForceSelectOutput">
            <summary>
                Gets or sets a value indicating whether the select output should be forced.
            </summary>
            <value>true if force select output, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.SetDataSourceAddedAction">
            <summary>The set data source for Added EntityState when BulkSaveChanges is called.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.SetDataSourceModifiedAction">
            <summary>The set data source for Modified EntityState when BulkSaveChanges is called.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.SetDataSourceDeletedAction">
            <summary>The set data source for Removed EntityState when BulkSaveChanges is called.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.TmpForceDatabaseFirstSingleModel">
            <summary>Testing Options. Do not use.</summary>
            <value>Testing Options. Do not use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreserveTopologicalSortOrder">
            <summary>
            Gets or sets a value indicating whether the library should preserve topological sort order.
            </summary>
            <value>True the library should preserve topological sort order, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreserveCommandOrder">
            <summary>Gets or sets a value indicating whether the preserve command order.</summary>
            <value>True if preserve command order, false if not.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityFrameworkManager.UseFiddleSqlCompact(System.Object,System.Object)">
            <summary>Add configuration in .NET Fiddle to be compatible with SQL Compact.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.TmpStoredModelEdmx">
            <summary>Testing Options. Do not use.</summary>
            <value>Testing Options. Do not use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.TmpModelEdmx">
            <summary>Testing Options. Do not use.</summary>
            <value>Testing Options. Do not use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.ModelEdmxFactory">
            <summary>Gets or sets the model edmx factory.</summary>
            <value>A function delegate that yields an XDocument.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.ContextFactory">
            <summary>Gets or sets the context factory. A new context must be created for internal use (DO NOT return the context from parameter).</summary>
            <value>The context factory. A new context must be created for internal use (DO NOT return the context from parameter).</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.SetDataSourceBulkInsertAction">
            <summary>The set data source for bulk insert action.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreBatchSaveChanges">
            <summary>Gets or sets an action to perform before the BatchSaveChanges is executed.</summary>
            <value>The action to perform before the BatchSaveChanges is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreBulkSaveChanges">
            <summary>Gets or sets an action to perform before the BulkSaveChanges is executed.</summary>
            <value>The action to perform before the BulkSaveChanges is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreBulkInsert">
            <summary>Gets or sets an action to perform before the BulkInsert is executed.</summary>
            <value>The action to perform before the BulkInsert is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreBulkUpdate">
            <summary>Gets or sets an action to perform before the BulkUpdate is executed.</summary>
            <value>The action to perform before the BulkUpdate is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreBulkMerge">
            <summary>Gets or sets an action to perform before the BulkMerge is executed.</summary>
            <value>The action to perform before the BulkMerge is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreBulkDelete">
            <summary>Gets or sets an action to perform before the BulkDelete is executed.</summary>
            <value>The action to perform before the BulkDelete is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.PreBulkSynchronize">
            <summary>Gets or sets an action to perform before the BulkSynchronize is executed.</summary>
            <value>The action to perform before the BulkSynchronize is executed.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.LogUniqueIndexIssue">
            <summary>Testing Options. Do not use.</summary>
            <value>Testing Options. Do not use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.ForceTriggerResolution">
            <summary>
                Gets or sets a value indicating whether the trigger resolution should be forced.
            </summary>
            <value>True if force trigger resolution, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.TemporaryStringToTypeAction">
            <summary>Testing Options. Do not use.</summary>
            <value>Testing Options. Do not use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.TemporaryFix_ModelName">
            <summary>Testing Options. Do not use.</summary>
            <value>Testing Options. Do not use.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.DefaultEntityFrameworkPropagationValue">
            <summary>
            Gets or sets a value indicating whether the default entity framework propagation should be used (setting it to false improve performance but doesn't support all model).
            </summary>
            <value>True if the default entity framework propagation should be used (setting it to false improve performance but doesn't support all model), false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EntityFrameworkManager.UseMySqlEntityFrameworkPropagation">
            <summary>
            Gets or sets a value indicating whether the MySql Entity Framework Propagation should be used.
            </summary>
            <value>True if the MySql Entity Framework Propagation should be used, false if not.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityFrameworkManager.TryTopologicalSort``1(System.Object)">
            <summary>
            Internal Public Method
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityFrameworkManager.TryBatchTopologicalSort``1(System.Object)">
            <summary>
            Internal Public Method
            </summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EntityFrameworkManager.LoadSqlTypeAssembly">
            <summary>Loads SQL type assembly.</summary>
        </member>
        <member name="T:Z.EntityFramework.Extensions.DeleteByKeyExecutor`1">
            <summary>Manager for delete by keys.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DeleteByKeyExecutor`1.#ctor(System.Data.Entity.DbSet{`0},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Constructor.</summary>
            <param name="dbSet">Set the database belongs to.</param>
            <param name="entitiesEnumerable">The entities.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DeleteByKeyExecutor`1.Prepare">
            <summary>Prepares command that will be executed.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DeleteByKeyExecutor`1.Execute">
            <summary>Execute the DeleteByKey logic.</summary>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:Z.EntityFramework.Extensions.DeleteByKeyExecutor`1.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>Executes the DeleteByKey asynchronous.</summary>
            <param name="cancellationToken">A token that allows processing to be cancelled.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.DeleteByKeyManager">
            <summary>Manager for delete by keys.</summary>
        </member>
        <member name="T:Z.EntityFramework.Extensions.IQueryHook">
            <summary>Interface for query hook.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.IQueryHook.Execute(System.Data.Common.DbCommand,System.Data.Entity.DbContext)">
            <summary>Executes.</summary>
            <param name="command">The command.</param>
            <param name="dbContext">Context for the database.</param>
        </member>
        <member name="T:Z.EntityFramework.Extensions.QueryHookCommandInterceptor">
            <summary>A query hook command interceptor.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookCommandInterceptor.NonQueryExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookCommandInterceptor.NonQueryExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookCommandInterceptor.ReaderExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Data.Common.DbDataReader})">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookCommandInterceptor.ReaderExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Data.Common.DbDataReader})">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookCommandInterceptor.ScalarExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookCommandInterceptor.ScalarExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookCommandInterceptor.HookExecuting(System.Data.Common.DbCommand,System.Data.Entity.DbContext)">
            <summary>Executes the hook operation.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="command">The command.</param>
            <param name="dbContext">Context for the database.</param>
        </member>
        <member name="T:Z.EntityFramework.Extensions.QueryHookManager">
            <summary>Manager for query hooks.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookManager.#cctor">
            <summary>Static constructor.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookManager.AddOrAppendHook``1(System.Linq.IQueryable{``0},Z.EntityFramework.Extensions.IQueryHook)">
            <summary>Adds an or append hook to 'hook'.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">this.</param>
            <param name="hook">The hook.</param>
            <returns>An IQueryable&lt;T&gt;</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.QueryHookExecuting">
            <summary>A query hook that apply when a query is executing.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.QueryHookExecuting.DbContext">
            <inheritdoc />
        </member>
        <member name="F:Z.EntityFramework.Extensions.QueryHookExecuting.Action">
            <summary>The action to execute.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookExecuting.#ctor(System.Action{System.Data.Common.DbCommand,System.Data.Entity.DbContext})">
            <summary>Constructor.</summary>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.QueryHookExecuting.Execute(System.Data.Common.DbCommand,System.Data.Entity.DbContext)">
            <inheritdoc />
        </member>
        <member name="T:Z.EntityFramework.Extensions.LicenseManager">
            <summary>Manager for licenses.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.LicenseManager.AddLicense(System.String,System.String)">
            <summary>Adds a license key (Multiple license key can be added).</summary>
            <param name="licenseName">Name of the license.</param>
            <param name="licenseKey">The license key.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.LicenseManager.ValidateLicense(Z.BulkOperations.ProviderType)">
            <summary>Validates if license added is valid.</summary>
            <param name="provider">The provider specific for the license.</param>
            <returns>true if it's valid, false if it's invalid.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.SelfHierarchyListColumnMapping">
            <summary>to self hierarchy option.</summary>
        </member>
        <member name="T:Z.EntityFramework.Extensions.SelfHierarchyListOptions`1">
            <summary>to self hierarchy option.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.SelfHierarchyListOptions`1.MaxRecursion">
            <summary>Gets or sets the maximum recursion to perform.</summary>
            <value>The maximum recursion to perform.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.SelfHierarchyListOptions`1.SelfHierarchyQuery">
            <summary>Gets or sets the self hierarchy query.</summary>
            <value>The self hierarchy query.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.SelfHierarchyListOptions`1.JoinExpression">
            <summary>Gets or sets the join expression.</summary>
            <value>The join expression.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.SelfHierarchyListOptions`1.ColumnMappings">
            <summary>Gets or sets the column mappings.</summary>
            <value>The column mappings.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.SelfHierarchyListOptions`1.FlatListRecursionLevel">
            <summary>Gets or sets the flat list recursion level, default = 0 which include only first query item.</summary>
            <value>The flat list recursion level, default = 0 which include only first query item.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.SelfHierarchyListOptions`1.InverseMapping">
            <summary>Gets or sets a value indicating whether the inverse mapping.</summary>
            <value>True if inverse mapping, false if not.</value>
        </member>
        <member name="T:Z.EntityFramework.Extensions.PolyCommandSet">
            <summary>A polygon SQL command set.</summary>
        </member>
        <member name="F:Z.EntityFramework.Extensions.PolyCommandSet.Commands">
            <summary>The commands.</summary>
        </member>
        <member name="F:Z.EntityFramework.Extensions.PolyCommandSet.CommandTimeout">
            <summary>The command timeout.</summary>
        </member>
        <member name="F:Z.EntityFramework.Extensions.PolyCommandSet.Connection">
            <summary>The connection.</summary>
        </member>
        <member name="F:Z.EntityFramework.Extensions.PolyCommandSet.ProviderInfo">
            <summary>The polygon provider.</summary>
        </member>
        <member name="F:Z.EntityFramework.Extensions.PolyCommandSet.PreserveOrder">
            <summary>True to preserve order.</summary>
        </member>
        <member name="F:Z.EntityFramework.Extensions.PolyCommandSet.AllowUseExecute">
            <summary>True to allow, false to suppress the use execute.</summary>
        </member>
        <member name="F:Z.EntityFramework.Extensions.PolyCommandSet.Transaction">
            <summary>The transaction.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.PolyCommandSet.BatchSize">
            <summary>The maximum number of command to batches in one command.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.PolyCommandSet.Execute">
            <summary>Executes this object.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.PolyCommandSet.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>Executes the asynchronous operation.</summary>
            <param name="cancellationToken">A token that allows processing to be cancelled.</param>
            <returns>An asynchronous result.</returns>
        </member>
        <member name="M:Z.EntityFramework.Extensions.PolyCommandSet.Add(System.Data.SqlClient.SqlCommand)">
            <summary>Adds command.</summary>
            <param name="command">The command to add.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.PolyCommandSet.Add(System.Data.SqlClient.SqlCommand,System.Action{System.Data.Common.DbDataReader})">
            <summary>Adds command.</summary>
            <param name="command">The command.</param>
            <param name="callbackAction">The callback action.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.PolyCommandSet.Combine">
            <summary>Gets the combine.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <returns>
                A List&lt;Tuple&lt;SqlCommand,List&lt;Action&lt;DbDataReader&gt;&gt;&gt;&gt;
            </returns>
        </member>
        <member name="M:Z.EntityFramework.Extensions.PolyCommandSet.SetInfo(System.Data.Common.DbConnection,System.Data.Common.DbTransaction)">
            <summary>Sets an information.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="connection">The connection.</param>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:Z.EntityFramework.Extensions.PolyCommandSet.GetBaseCommand(System.Data.Common.DbCommand)">
            <summary>Gets base command.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="command">The command to add.</param>
            <returns>The base command.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.EffortPolyProvider">
            <summary>An effort polygon provider.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EffortPolyProvider.AllowMultipleStatement">
            <summary>Gets a value indicating whether we allow multiple statement.</summary>
            <value>True if allow multiple statement, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.EffortPolyProvider.MaximumParameter">
            <summary>Gets the maximum parameter.</summary>
            <value>The maximum parameter.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.EffortPolyProvider.EscapeTableName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.EffortPolyProvider.EscapeColumnName(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Z.EntityFramework.Extensions.IPolyProvider">
            <summary>Interface for polygon provider.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.IPolyProvider.AllowMultipleStatement">
            <summary>Gets a value indicating whether we allow multiple statement.</summary>
            <value>True if allow multiple statement, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.IPolyProvider.MaximumParameter">
            <summary>Gets the maximum parameter.</summary>
            <value>The maximum parameter.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.IPolyProvider.EscapeTableName(System.String)">
            <summary>Escape table name.</summary>
            <param name="tableName">Name of the table.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:Z.EntityFramework.Extensions.IPolyProvider.EscapeColumnName(System.String)">
            <summary>Escape column name.</summary>
            <param name="columnName">Name of the column.</param>
            <returns>A string.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.PolyProvider">
            <summary>A polygon provider.</summary>
        </member>
        <member name="M:Z.EntityFramework.Extensions.PolyProvider.GetBaseProvider(System.Data.Common.DbConnection)">
            <summary>Gets base provider.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="connection">The connection.</param>
            <returns>The base provider.</returns>
        </member>
        <member name="T:Z.EntityFramework.Extensions.SqlPolyProvider">
            <summary>A SQL polygon provider.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.SqlPolyProvider.AllowMultipleStatement">
            <summary>Gets a value indicating whether we allow multiple statement.</summary>
            <value>True if allow multiple statement, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.SqlPolyProvider.MaximumParameter">
            <summary>Gets the maximum parameter.</summary>
            <value>The maximum parameter.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.SqlPolyProvider.Clone(System.Data.SqlClient.SqlParameter,System.String)">
            <summary>Makes a deep copy of this object.</summary>
            <param name="this">this.</param>
            <param name="newName">Name of the new.</param>
            <returns>A copy of this object.</returns>
        </member>
        <member name="M:Z.EntityFramework.Extensions.SqlPolyProvider.EscapeTableName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.SqlPolyProvider.EscapeColumnName(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Z.EntityFramework.Extensions.SqlServerCePolyProvider">
            <summary>A SQL server ce polygon provider.</summary>
        </member>
        <member name="P:Z.EntityFramework.Extensions.SqlServerCePolyProvider.AllowMultipleStatement">
            <summary>Gets a value indicating whether we allow multiple statement.</summary>
            <value>True if allow multiple statement, false if not.</value>
        </member>
        <member name="P:Z.EntityFramework.Extensions.SqlServerCePolyProvider.MaximumParameter">
            <summary>Gets the maximum parameter.</summary>
            <value>The maximum parameter.</value>
        </member>
        <member name="M:Z.EntityFramework.Extensions.SqlServerCePolyProvider.EscapeTableName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Z.EntityFramework.Extensions.SqlServerCePolyProvider.EscapeColumnName(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Z.BulkOperations.AuditModeType">
            <summary>Values that represent AuditModeType.</summary>
        </member>
        <member name="T:Z.BulkOperations.AuditActionType">
            <summary>Values that represent AuditActionType.</summary>
        </member>
        <member name="F:Z.BulkOperations.AuditActionType.Delete">
            <summary>An enum constant representing the delete option.</summary>
        </member>
        <member name="F:Z.BulkOperations.AuditActionType.Insert">
            <summary>An enum constant representing the insert option.</summary>
        </member>
        <member name="F:Z.BulkOperations.AuditActionType.Update">
            <summary>An enum constant representing the update option.</summary>
        </member>
        <member name="T:Z.BulkOperations.AuditEntry">
            <summary>An audit entry.</summary>
        </member>
        <member name="P:Z.BulkOperations.AuditEntry.Action">
            <summary>Gets or sets the action.</summary>
            <value>The action.</value>
        </member>
        <member name="P:Z.BulkOperations.AuditEntry.Date">
            <summary>Gets or sets the Date/Time of the date.</summary>
            <value>The date.</value>
        </member>
        <member name="P:Z.BulkOperations.AuditEntry.Metas">
            <summary>Gets or sets the metas.</summary>
            <value>The metas.</value>
        </member>
        <member name="P:Z.BulkOperations.AuditEntry.TableName">
            <summary>Gets or sets the name of the table.</summary>
            <value>The name of the table.</value>
        </member>
        <member name="P:Z.BulkOperations.AuditEntry.Values">
            <summary>Gets or sets the values.</summary>
            <value>The values.</value>
        </member>
        <member name="T:Z.BulkOperations.AuditEntryItem">
            <summary>An audit entry item.</summary>
        </member>
        <member name="P:Z.BulkOperations.AuditEntryItem.ColumnName">
            <summary>Gets or sets the name of the column.</summary>
            <value>The name of the column.</value>
        </member>
        <member name="P:Z.BulkOperations.AuditEntryItem.NewValue">
            <summary>Gets or sets the new value.</summary>
            <value>The new value.</value>
        </member>
        <member name="P:Z.BulkOperations.AuditEntryItem.OldValue">
            <summary>Gets or sets the old value.</summary>
            <value>The old value.</value>
        </member>
        <member name="T:Z.BulkOperations.AutoMapType">
            <summary>Values that represent AutoMapType.</summary>
        </member>
        <member name="T:Z.BulkOperations.BasicBulkOperation">
            <summary>A basic bulk operation.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkDelete">
            <summary>Bulk delete.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkDelete(System.Object)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkDelete(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkDeleteAsync(System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkDeleteAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkDeleteAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkInsert">
            <summary>Bulk insert.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkInsert(System.Object)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkInsert(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkInsertAsync(System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkInsertAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkInsertAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkMerge">
            <summary>Bulk merge.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkMerge(System.Object)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkMerge(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkMergeAsync(System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkMergeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkMergeAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkSaveChanges(System.Data.DataTable)">
            <summary>Bulk save changes.</summary>
            <param name="dt">The datatable.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkSaveChangesAsync(System.Data.DataTable,System.Threading.CancellationToken)">
            <summary>Bulk save changes.</summary>
            <param name="dt">The datatable.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkSynchronize">
            <summary>Bulk synchronize.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkSynchronize(System.Object)">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkSynchronizeAsync(System.Threading.CancellationToken)">
            <summary>Bulk synchronize.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkSynchronizeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkUpdate">
            <summary>Bulk update.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkUpdate(System.Object)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkUpdate(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkUpdateAsync(System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkUpdateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.BulkUpdateAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation.Advanced">
            <summary>Gets or sets the advanced.</summary>
            <value>The advanced.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation.BatchSize">
            <summary>Gets or sets the size of the batch.</summary>
            <value>The size of the batch.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation.ColumnMappings">
            <summary>Gets or sets the column mappings.</summary>
            <value>The column mappings.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation.Connection">
            <summary>Gets or sets the connection.</summary>
            <value>The connection.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation.DataSource">
            <summary>Gets or sets the data source.</summary>
            <value>The data source.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation.DestinationTableName">
            <summary>Gets or sets the name of the destination table.</summary>
            <value>The name of the destination table.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation.Transaction">
            <summary>Gets or sets the transaction.</summary>
            <value>The transaction.</value>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting
                unmanaged resources.
            </summary>
        </member>
        <member name="T:Z.BulkOperations.BasicBulkOperation`1">
            <summary>A basic bulk operation.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkDelete">
            <summary>Bulk delete.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkDelete(System.Collections.Generic.List{`0})">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkDeleteAsync(System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkDeleteAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkInsert">
            <summary>Bulk insert.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkInsert(System.Collections.Generic.List{`0})">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkInsertAsync(System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkInsertAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkMerge">
            <summary>Bulk merge.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkMerge(System.Collections.Generic.List{`0})">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkMergeAsync(System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkMergeAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkSynchronize">
            <summary>Bulk synchronize.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkSynchronize(System.Collections.Generic.List{`0})">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkSynchronizeAsync(System.Threading.CancellationToken)">
            <summary>Bulk synchronize.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkSynchronizeAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkUpdate">
            <summary>Bulk update.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkUpdate(System.Collections.Generic.List{`0})">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkUpdateAsync(System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.BulkUpdateAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.DeleteFromQuery(System.Func{System.Linq.IQueryable{`0},System.Collections.Generic.IEnumerable{`0}})">
            <summary>Deletes from IQueryable.</summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.#ctor">
            <summary>None constructor.</summary>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.Advanced">
            <summary>Gets or sets the advanced.</summary>
            <value>The advanced.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.BatchSize">
            <summary>Gets or sets the size of the batch.</summary>
            <value>The size of the batch.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.ColumnMappings">
            <summary>Gets or sets the column mappings.</summary>
            <value>The column mappings.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.ColumnInputExpression">
            <summary>Gets or sets the column input expression.</summary>
            <value>The column input expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.ColumnOutputExpression">
            <summary>Gets or sets the column output expression.</summary>
            <value>The column output expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.ColumnPrimaryKeyExpression">
            <summary>Gets or sets the column primary key expression.</summary>
            <value>The column primary key expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.Connection">
            <summary>Gets or sets the connection.</summary>
            <value>The connection.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.DataSource">
            <summary>Gets or sets the data source.</summary>
            <value>The data source.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.DestinationTableName">
            <summary>Gets or sets the name of the destination table.</summary>
            <value>The name of the destination table.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicBulkOperation`1.Transaction">
            <summary>Gets or sets the transaction.</summary>
            <value>The transaction.</value>
        </member>
        <member name="M:Z.BulkOperations.BasicBulkOperation`1.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting
                unmanaged resources.
            </summary>
        </member>
        <member name="T:Z.BulkOperations.BasicColumnMapping">
            <summary>A column mapping.</summary>
            <summary>A column mapping.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor">
            <summary>Inherit constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.Int32,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping.#ctor(System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping.Advanced">
            <summary>Gets the advanced.</summary>
            <value>The advanced.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping.DestinationName">
            <summary>Gets or sets the name of the destination.</summary>
            <value>The name of the destination.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping.DestinationOrdinal">
            <summary>Gets or sets destination ordinal.</summary>
            <value>The destination ordinal.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping.Direction">
            <summary>Gets or sets the direction.</summary>
            <value>The direction.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping.IsPrimaryKey">
            <summary>Gets or sets a value indicating whether this object is primary key.</summary>
            <value>true if this object is primary key, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping.SourceName">
            <summary>Gets or sets the name of the source.</summary>
            <value>The name of the source.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping.SourceOrdinal">
            <summary>Gets or sets source ordinal.</summary>
            <value>The source ordinal.</value>
        </member>
        <member name="T:Z.BulkOperations.BasicColumnMapping`1">
            <summary>A column mapping.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor">
            <summary>Inherit constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Int32,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.BasicColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.Advanced">
            <summary>Gets the advanced.</summary>
            <value>The advanced.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.DestinationExpression">
            <summary>Gets or sets destination expression.</summary>
            <value>The destination expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.DestinationName">
            <summary>Gets or sets the name of the destination.</summary>
            <value>The name of the destination.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.DestinationOrdinal">
            <summary>Gets or sets destination ordinal.</summary>
            <value>The destination ordinal.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.Direction">
            <summary>Gets or sets the direction.</summary>
            <value>The direction.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.IsPrimaryKey">
            <summary>Gets or sets a value indicating whether this object is primary key.</summary>
            <value>true if this object is primary key, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.SourceExpression">
            <summary>Gets or sets source expression.</summary>
            <value>The source expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.SourceName">
            <summary>Gets or sets the name of the source.</summary>
            <value>The name of the source.</value>
        </member>
        <member name="P:Z.BulkOperations.BasicColumnMapping`1.SourceOrdinal">
            <summary>Gets or sets source ordinal.</summary>
            <value>The source ordinal.</value>
        </member>
        <member name="F:Z.BulkOperations.BulkOperationManager.BulkOperationBuilder">
            <summary>Set the builder that will apply to all bulk operation instance.</summary>
        </member>
        <member name="F:Z.BulkOperations.BulkOperationManager.ColumnMappingBuilder">
            <summary>The column mapping builder.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationManager.IsCommunity">
            <summary>Gets or sets a value indicating whether the library is in community mode (automatically throw an error for all paid features).</summary>
            <value>True if the library is in community mode (automatically throw an error for all paid features).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationManager.Cache">
            <summary>Gets or sets the cache to use.</summary>
            <value>The cache to use.</value>
        </member>
        <member name="F:Z.BulkOperations.BulkOperationManager.UseOracleArray">
            <summary>Array of use oracles.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationManager.ForceExpandoAsDictionaryEntryName">
            <summary>
            Gets or sets a value indicating whether the expando as dictionary entry name should be
            forced.
            </summary>
            <value>true if force expando as dictionary entry name, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationManager.ForceSelectOutput">
            <summary>
            Gets or sets a value indicating whether the select output should be forced.
            </summary>
            <value>true if force select output, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationManager.CustomProvider">
            <summary>Gets or sets the custom provider.</summary>
            <value>The custom provider.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationManager.ForceTriggerResolution">
            <summary>
            Gets or sets a value indicating whether the trigger resolution should be forced.
            </summary>
            <value>True if force trigger resolution, false if not.</value>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkDelete">
            <summary>Bulk delete.</summary>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkDelete(System.Object)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkDelete(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkDeleteAsync(System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkDeleteAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkDeleteAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkInsert">
            <summary>Bulk insert.</summary>
            <example>
                text
                <code>var x = 1+2</code></example>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkInsert(System.Object)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <example>
                text
                <code>var x = 1+2</code>
                text2
                <code>var x = 1+3</code></example>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkInsert(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <example>
                text
                <code>var x = 1+2</code><code>var x = 1+4</code>
                text2
                <code>var x = 1+3</code>
                text 4
            </example>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkInsertAsync(System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkInsertAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkInsertAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkMerge">
            <summary>Bulk merge.</summary>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkMerge(System.Object)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkMerge(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkMergeAsync(System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkMergeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkMergeAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkSaveChanges(System.Data.DataTable)">
            <summary>Bulk save changes.</summary>
            <param name="dt">The datatable.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkSaveChangesAsync(System.Data.DataTable,System.Threading.CancellationToken)">
            <summary>Bulk save changes.</summary>
            <param name="dt">The datatable.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkSynchronize">
            <summary>Bulk synchronize.</summary>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkSynchronize(System.Object)">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkSynchronizeAsync(System.Threading.CancellationToken)">
            <summary>Bulk synchronize.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkSynchronizeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkUpdate">
            <summary>Bulk update.</summary>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkUpdate(System.Object)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkUpdate(System.Data.DataTable,System.Data.DataRowState)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkUpdateAsync(System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkUpdateAsync(System.Object,System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.BulkUpdateAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="dataRowState">State of the data row.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation.Recompile">
            <summary>Recompiles this object.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AuditEntries">
            <summary>Gets or sets the audit entries.</summary>
            <value>The audit entries.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AuditMode">
            <summary>Gets or sets the audit mode.</summary>
            <value>The audit mode.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UseAudit">
            <summary>Gets or sets a value indicating whether this object use audit.</summary>
            <value>true if use audit, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AutoMap">
            <summary>Gets or sets the automatic map.</summary>
            <value>The automatic map.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AutoMapKeyName">
            <summary>Gets or sets the name of the automatic map key.</summary>
            <value>The name of the automatic map key.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AutoMapIdentityName">
            <summary>Gets or sets the name of the automatic map identity.</summary>
            <value>The name of the automatic map identity.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AutoMapKeyExpression">
            <summary>Gets or sets the automatic map key expression.</summary>
            <value>The automatic map key expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AutoMapIdentityExpression">
            <summary>Gets or sets the automatic map identity expression.</summary>
            <value>The automatic map identity expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AutoMapValueFactory">
            <summary>Gets or sets the factory to use in value when AutoMap is used.</summary>
            <value>The factory to use in value when AutoMap is used.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.BatchDelayInterval">
            <summary>Gets or sets the batch delay interval.</summary>
            <value>The batch delay interval.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.BatchSize">
            <summary>Gets or sets the size of the batch.</summary>
            <value>The size of the batch.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.BatchTimeout">
            <summary>Gets or sets the batch timeout.</summary>
            <value>The batch timeout.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CaseSensitive">
            <summary>Gets or sets the case sensitive mode.</summary>
            <value>The case sensitive mode.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnPrimaryKeyNames">
            <summary>Gets or sets the name of the column primary key.</summary>
            <value>The name of the column primary key.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnSynchronizeDeleteKeySubsetNames">
            <summary>Gets or sets the name of the column primary key.</summary>
            <value>The name of the column primary key.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnInputExpression">
            <summary>Gets or sets the column input expression.</summary>
            <value>The column input expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnInputOutputExpression">
            <summary>Gets or sets the column input/output expression.</summary>
            <value>The column input/output expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnOutputExpression">
            <summary>Gets or sets the column output expression.</summary>
            <value>The column output expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnPrimaryKeyExpression">
            <summary>Gets or sets the column primary key expression.</summary>
            <value>The column primary key expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnSynchronizeDeleteKeySubsetExpression">
            <summary>Gets or sets the column synchronize delete key subset expression.</summary>
            <value>The column synchronize delete key subset expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnInsertExpression">
            <summary>Gets or sets the ignore on insert expression.</summary>
            <value>The ignore on insert expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnUpdateExpression">
            <summary>Gets or sets the ignore on update expression.</summary>
            <value>The ignore on update expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnMergeInsertExpression">
            <summary>Gets or sets the ignore on merge insert expression.</summary>
            <value>The ignore on merge insert expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnMergeUpdateExpression">
            <summary>Gets or sets the ignore on merge update expression.</summary>
            <value>The ignore on merge update expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnSynchronizeInsertExpression">
            <summary>Gets or sets the ignore on synchronize insert expression.</summary>
            <value>The ignore on synchronize insert expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnSynchronizeUpdateExpression">
            <summary>Gets or sets the ignore on synchronize update expression.</summary>
            <value>The ignore on synchronize update expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.MergeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when merge update is matched.</summary>
            <value>The `AND CONDITION` to add when merge update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.MergeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when merge update is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when merge update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UpdateMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when update is matched.</summary>
            <value>The `AND CONDITION` to add when update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UpdateMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when update is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DeleteMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when delete is matched.</summary>
            <value>The `AND CONDITION` to add when delete is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DeleteMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when delete is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when delete is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when synchronize (merge) update is matched.</summary>
            <value>The `AND CONDITION` to add when synchronize (merge) update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when synchronize (merge) update is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when synchronize (merge) update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnMergeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND CONDITION` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnMergeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnUpdateMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND CONDITION` to add when update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnUpdateMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnSynchronizeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when synchronize (merge) update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND CONDITION` to add when synchronize (merge) update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IgnoreOnSynchronizeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when synchronize (merge) update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when synchronize (merge) update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CoalesceOnMergeUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(StagingValue, DestinationValue).</summary>
            <value>The columns to coalesce, ISNULL(StagingValue, DestinationValue).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CoalesceDestinationOnMergeUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(DestinationValue, StagingValue).</summary>
            <value>The columns to coalesce, ISNULL(DestinationValue, StagingValue).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CoalesceOnUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(StagingValue, DestinationValue).</summary>
            <value>The columns to coalesce, ISNULL(StagingValue, DestinationValue).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CoalesceDestinationOnUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(DestinationValue, StagingValue).</summary>
            <value>The columns to coalesce, ISNULL(DestinationValue, StagingValue).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ColumnMappings">
            <summary>Gets or sets the column mappings.</summary>
            <value>The column mappings.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.OnMergeUpdateUseCoalesce">
            <summary>
            Gets or sets a value indicating whether the on merge update use coalesce.
            </summary>
            <value>True if on merge update use coalesce, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.OnUpdateUseCoalesce">
            <summary>
            Gets or sets a value indicating whether the on update use coalesce.
            </summary>
            <value>True if on update use coalesce, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DefaultValueResolution">
            <summary>Gets or sets the default value resolution.</summary>
            <value>The default value resolution.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CommandParameterAddRowIndex">
            <summary>Gets or sets a value indicating whether the command parameter add row index.</summary>
            <value>true if command parameter add row index, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CommandParameterPrefix">
            <summary>Gets or sets the command parameter prefix.</summary>
            <value>The command parameter prefix.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CommandParameterSuffix">
            <summary>Gets or sets the command parameter suffix.</summary>
            <value>The command parameter suffix.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UseCompile">
            <summary>Gets or sets a value indicating whether this object use compile.</summary>
            <value>true if use compile, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.Connection">
            <summary>Gets or sets the connection.</summary>
            <value>The connection.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ConnectionName">
            <summary>Gets or sets the name of the connection.</summary>
            <value>The name of the connection.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ConnectionString">
            <summary>Gets or sets the connection string.</summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ConnectionFactory">
            <summary>Gets or sets the connection factory.</summary>
            <value>The connection factory.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.CustomProvider">
            <summary>Gets or sets the custom provider.</summary>
            <value>The custom provider.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DataSource">
            <summary>Gets or sets the data source.</summary>
            <value>The data source.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DestinationTableName">
            <summary>Gets or sets the name of the destination table.</summary>
            <value>The name of the destination table.</value>
        </member>
        <member name="F:Z.BulkOperations.BulkOperation.ContextFactory">
            <summary>Gets or sets the context factory function to use when a working context is requested.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IncludeJunctionTable">
            <summary>
            Gets or sets a value indicating whether the junction table should be included for operation such as `DeleteFromQuery`.
            </summary>
            <value>True the junction table should be included for operation such as `DeleteFromQuery`.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SkipPropagationAndAcceptChanges">
            <summary>
            Gets or sets a value indicating whether all propagation and accept changes must be skipped.
            </summary>
            <value>True if skip propagation and accept changes, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.StreamSize">
            <summary>Gets or sets the size of the stream.</summary>
            <value>The size of the stream.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ErrorMode">
            <summary>Gets or sets the error mode.</summary>
            <value>The error mode.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.Errors">
            <summary>Gets or sets the error objects.</summary>
            <value>The error objects.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.BulkOperationExecuting">
            <summary>Gets or sets the bulk operation executing.</summary>
            <value>The bulk operation executing.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.BulkOperationExecuted">
            <summary>Gets or sets the bulk operation executed.</summary>
            <value>The bulk operation executed.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DeleteFromQueryExecuted">
            <summary>Gets or sets the delete from query executed.</summary>
            <value>The delete from query executed.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.MergeMatchedAndFormula">
            <summary>Gets or sets the formula to add after the "AND" in the merge statement.</summary>
            <value>The formula to add after the "AND" in the merge statement.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizeMatchedAndFormula">
            <summary>Gets or sets the formula to add after the "AND" in the synchronize (merge) statement.</summary>
            <value>The formula to add after the "AND" in the synchronize (merge) statement.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UpdateMatchedAndFormula">
            <summary>Gets or sets the formula to add after the "AND" in the update statement (in the merge part).</summary>
            <value>The formula to add after the "AND" in the update statement (in the merge part).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.DeleteMatchedAndFormula">
            <summary>Gets or sets the formula to add after the "AND" in the delete statement (in the merge part).</summary>
            <value>The formula to add after the "AND" in the delete statement (in the merge part).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UpdatePrimaryKeyAndFormula">
            <summary>Gets or sets the formula to add after the "AND" in the update statement when joining with the key.</summary>
            <value>The formula to add after the "AND" in the update statement  when joining with the key.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.Log">
            <summary>Gets or sets the log.</summary>
            <value>The log.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.LogDump">
            <summary>Gets or sets the log dump.</summary>
            <value>The log dump.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UseLogDump">
            <summary>Gets or sets a value indicating whether this object use log dump.</summary>
            <value>true if use log dump, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UseOracleGlobalSequenceIndexTable">
            <summary>
                Gets or sets a value indicating whether this object use oracle global identity index
                table.
            </summary>
            <value>true if use oracle global identity index table, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ForceSelectOutput">
            <summary>
            Gets or sets a value indicating whether the select output should be forced.
            </summary>
            <value>true if force select output, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ParallelBatchByTask">
            <summary>Gets or sets the parallel batch by task.</summary>
            <value>The parallel batch by task.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ParallelMinBatch">
            <summary>Gets or sets the parallel minimum batch.</summary>
            <value>The parallel minimum batch.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ParallelMinRecord">
            <summary>Gets or sets the parallel minimum record.</summary>
            <value>The parallel minimum record.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UseParallel">
            <summary>Gets or sets a value indicating whether this object use parallel.</summary>
            <value>true if use parallel, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AllowDuplicateKeys">
            <summary>Gets or sets a value indicating whether we allow duplicate kyes.</summary>
            <value>true if allow duplicate kyes, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AllowUpdatePrimaryKeys">
            <summary>Gets or sets a value indicating whether we allow update primary keys.</summary>
            <value>true if allow update primary keys, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.InsertIfNotExists">
            <summary>Gets or sets a value indicating whether the insert if not exists.</summary>
            <value>true if insert if not exists, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.Provider">
            <summary>Gets or sets the provider.</summary>
            <value>The provider.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.Resolution">
            <summary>Gets or sets the resolution mode.</summary>
            <value>The resolution mode.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ForceTriggerResolution">
            <summary>
            Gets or sets a value indicating whether the trigger resolution should be forced.
            </summary>
            <value>True if force trigger resolution, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.RowsAffected">
            <summary>Gets or sets the number of row affected by the last query.</summary>
            <value>The number of row affected by the last query.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.AutoTruncate">
            <summary>Gets or sets a value indicating whether string value are automatic truncated.</summary>
            <value>True if string value are automatic truncated, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IsReadOnly">
            <summary>Gets or sets a value indicating whether this object is read only.</summary>
            <value>True if this object is read only, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.IsCheckConstraintOnInsertDisabled">
            <summary>
            Gets or sets is Check Constraint is disabled on Insert. **DANGER**: This option force a SqlBulkCopy and is incompatible with almost all options.
            </summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SqlBulkCopyOptions">
            <summary>Gets or sets the provider.</summary>
            <value>The provider.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.MergeKeepIdentity">
            <summary>Gets or sets a value indicating whether the merge keep identity.</summary>
            <value>true if merge keep identity, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizeKeepidentity">
            <summary>Gets or sets a value indicating whether the synchronize keep identity.</summary>
            <value>true if synchronize keep identity, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.InsertKeepIdentity">
            <summary>Gets or sets a value indicating whether the insert keep identity.</summary>
            <value>true if insert keep identity, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.HasColumnEncrypted">
            <summary>
                Gets or sets a value indicating whether this object has column encrypted.
            </summary>
            <value>true if this object has column encrypted, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.SynchronizeOnlyDelete">
            <summary>
                Gets or sets a value indicating whether the synchronize operation should only do the delete part.
            </summary>
            <value>true if the synchronize operation should only do the delete part, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTableBatchByTable">
            <summary>Gets or sets the temporary table batch by table.</summary>
            <value>The temporary table batch by table.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTableInsertBatchSize">
            <summary>Gets or sets the size of the temporary table insert batch.</summary>
            <value>The size of the temporary table insert batch.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTableMinRecord">
            <summary>Gets or sets the temporary table minimum record.</summary>
            <value>The temporary table minimum record.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTableUseTableLock">
            <summary>Gets or sets a value indicating whether the temporary table use table is locked.</summary>
            <value>true if temporary table use table lock, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UseTableLock">
            <summary>Gets or sets a value indicating whether the destination table should be locked.</summary>
            <value>true if the destination table should be locked.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTableSchemaName">
            <summary>Gets or sets the name of the temporary table schema.</summary>
            <value>The name of the temporary table schema.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UsePermanentTable">
            <summary>Gets or sets if the code should use permanent table instead of temporary table.</summary>
            <value>if the code should use permanent table instead of temporary table.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTableName">
            <summary>Gets or sets the name of the temporary table.</summary>
            <value>The name of the temporary table.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTablePersist">
            <summary>Gets or sets a value indicating whether the temporary table persist.</summary>
            <value>True if temporary table persist, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.TemporaryTableIsMemory">
            <summary>Gets or sets a value indicating whether the temporary table is memory.</summary>
            <value>True if temporary table is memory, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.Transaction">
            <summary>Gets or sets the transaction.</summary>
            <value>The transaction.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.InternalTransaction">
            <summary>Gets or sets the internal transaction.</summary>
            <value>The internal transaction.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.RetryCount">
            <summary>Gets or sets the number of retries.</summary>
            <value>The number of retries.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.RetryInterval">
            <summary>Gets or sets the retry interval.</summary>
            <value>The retry interval.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.UnsafeMode">
            <summary>Gets or sets a value indicating whether the unsafe mode is activated.</summary>
            <value>True if unsafe mode, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ValidateAllSourceMapped">
            <summary>
            Gets or sets a value indicating whether or not to validate all source members are mapped.
            </summary>
            <value>True if validate all source members are mapped, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation.ValidateAllDestinationMapped">
            <summary>
            Gets or sets a value indicating whether or not to validate all destination columns are mapped.
            </summary>
            <value>True if validate all destination columns are mapped, false if not.</value>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkDelete(System.Collections.Generic.List{`0})">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkDeleteAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk delete.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkInsert(System.Collections.Generic.List{`0})">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkInsertAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk insert.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkMerge(System.Collections.Generic.List{`0})">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkMergeAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk merge.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkSynchronize(System.Collections.Generic.List{`0})">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkSynchronizeAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk synchronize.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkUpdate(System.Collections.Generic.List{`0})">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.BulkUpdateAsync(System.Collections.Generic.List{`0},System.Threading.CancellationToken)">
            <summary>Bulk update.</summary>
            <param name="datasource">The datasource.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.DeleteFromQuery(System.Linq.IQueryable,System.Linq.IQueryable)">
            <summary>Deletes from IQueryable.</summary>
            <param name="originalQuery">The original query.</param>
            <param name="query">The query.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.DeleteFromQuery(System.Func{System.Linq.IQueryable{`0},System.Collections.Generic.IEnumerable{`0}})">
            <summary>Deletes from IQueryable.</summary>
            <param name="query">The query.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.DeleteFromQueryAsync(System.Linq.IQueryable,System.Linq.IQueryable,System.Threading.CancellationToken)">
            <summary>Deletes from IQueryable.</summary>
            <param name="originalQuery">The original query.</param>
            <param name="query">The query.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.DeleteFromQueryAsync(System.Func{System.Linq.IQueryable{`0},System.Collections.Generic.IEnumerable{`0}},System.Threading.CancellationToken)">
            <summary>Deletes from IQueryable.</summary>
            <param name="query">The query.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.UpdateFromQuery(System.Linq.IQueryable,System.Linq.IQueryable,System.Linq.Expressions.Expression{System.Func{`0,`0}})">
            <summary>Updates from query.</summary>
            <param name="originalQuery">The original query.</param>
            <param name="query">The query.</param>
            <param name="updateExpression">The update expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.UpdateFromQuery(System.Func{System.Linq.IQueryable{`0},System.Collections.Generic.IEnumerable{`0}},System.Linq.Expressions.Expression{System.Func{`0,`0}})">
            <summary>Updates from query.</summary>
            <param name="query">The query.</param>
            <param name="updateExpression">The update expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.UpdateFromQueryAsync(System.Linq.IQueryable,System.Linq.IQueryable,System.Linq.Expressions.Expression{System.Func{`0,`0}},System.Threading.CancellationToken)">
            <summary>Updates from query asynchronous.</summary>
            <param name="originalQuery">The original query.</param>
            <param name="query">The query.</param>
            <param name="updateExpression">The update expression.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:Z.BulkOperations.BulkOperation`1.UpdateFromQueryAsync(System.Func{System.Linq.IQueryable{`0},System.Collections.Generic.IEnumerable{`0}},System.Linq.Expressions.Expression{System.Func{`0,`0}},System.Threading.CancellationToken)">
            <summary>Updates from query asynchronous.</summary>
            <param name="query">The query.</param>
            <param name="updateExpression">The update expression.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.ColumnMappings">
            <summary>Gets or sets the column mappings.</summary>
            <value>The column mappings.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.ColumnInputExpression">
            <summary>Gets or sets the column input expression.</summary>
            <value>The column input expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.ColumnInputOutputExpression">
            <summary>Gets or sets the column input/output expression.</summary>
            <value>The column input/output expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.ColumnOutputExpression">
            <summary>Gets or sets the column output expression.</summary>
            <value>The column output expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.AutoMapKeyExpression">
            <summary>Gets or sets the automatic map key expression.</summary>
            <value>The automatic map key expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.AutoMapIdentityExpression">
            <summary>Gets or sets the automatic map identity expression.</summary>
            <value>The automatic map identity expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.ColumnPrimaryKeyExpression">
            <summary>Gets or sets the column primary key expression.</summary>
            <value>The column primary key expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.ColumnSynchronizeDeleteKeySubsetExpression">
            <summary>Gets or sets the column primary key expression.</summary>
            <value>The column primary key expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnInsertExpression">
            <summary>Gets or sets the ignore on insert expression.</summary>
            <value>The ignore on insert expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnUpdateExpression">
            <summary>Gets or sets the ignore on update expression.</summary>
            <value>The ignore on update expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnMergeInsertExpression">
            <summary>Gets or sets the ignore on merge insert expression.</summary>
            <value>The ignore on merge insert expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnMergeUpdateExpression">
            <summary>Gets or sets the ignore on merge update expression.</summary>
            <value>The ignore on merge update expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnSynchronizeInsertExpression">
            <summary>Gets or sets the ignore on synchronize insert expression.</summary>
            <value>The ignore on synchronize insert expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnSynchronizeUpdateExpression">
            <summary>Gets or sets the ignore on synchronize update expression.</summary>
            <value>The ignore on synchronize update expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.MergeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when merge update is matched.</summary>
            <value>The `AND CONDITION` to add when merge update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.MergeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when merge update is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when merge update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.UpdateMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when update is matched.</summary>
            <value>The `AND CONDITION` to add when update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.UpdateMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when update is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.DeleteMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when update is matched.</summary>
            <value>The `AND CONDITION` to add when update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.DeleteMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when update is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.SynchronizeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when merge update is matched.</summary>
            <value>The `AND CONDITION` to add when merge update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.SynchronizeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when merge update is matched.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when merge update is matched.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnMergeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND CONDITION` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnMergeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnUpdateMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND CONDITION` to add when update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnUpdateMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnSynchronizeMatchedAndConditionExpression">
            <summary>Gets or sets the `AND CONDITION` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND CONDITION` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.IgnoreOnSynchronizeMatchedAndOneNotConditionExpression">
            <summary>Gets or sets the `AND (ONE NOT MEET CONDITION)` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</summary>
            <value>The `AND (ONE NOT MEET CONDITION)` to add when merge update is matched. All columns are part of the condition except those from the ignore expression.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.CoalesceOnMergeUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(StagingValue, DestinationValue).</summary>
            <value>The columns to coalesce, ISNULL(StagingValue, DestinationValue).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.CoalesceDestinationOnMergeUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(DestinationValue, StagingValue).</summary>
            <value>The columns to coalesce, ISNULL(DestinationValue, StagingValue).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.CoalesceOnUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(StagingValue, DestinationValue).</summary>
            <value>The columns to coalesce, ISNULL(StagingValue, DestinationValue).</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperation`1.CoalesceDestinationOnUpdateExpression">
            <summary>Gets or sets columns to coalesce, ISNULL(DestinationValue, StagingValue).</summary>
            <value>The columns to coalesce, ISNULL(DestinationValue, StagingValue).</value>
        </member>
        <member name="T:Z.BulkOperations.DefaultValueResolutionType">
            <summary>Values that represent ColumnMappingFormulaType.</summary>
        </member>
        <member name="T:Z.BulkOperations.ColumnMapping">
            <summary>An advanced column mapping.</summary>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.CoalesceOnMergeUpdate">
            <summary>Gets or sets a value indicating whether the coalesce on merge update.</summary>
            <value>True if coalesce on merge update, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.CoalesceDestinationOnMergeUpdate">
            <summary>
            Gets or sets a value indicating whether the coalesce destination merge update.
            </summary>
            <value>True if coalesce destination merge update, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.IsOptional">
            <summary>Gets or sets a value indicating whether this object is optional.</summary>
            <value>True if this object is optional, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.AuditMode">
            <summary>Gets or sets the audit mode.</summary>
            <value>The audit mode.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.CaseSensitive">
            <summary>Gets or sets the case sensitive mode.</summary>
            <value>The case sensitive mode.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.IsConcurrencyColumn">
            <summary>Gets or sets a value indicating whether this object is concurrency column.</summary>
            <value>true if this object is concurrency column, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.DestinationAlias">
            <summary>Gets or sets destination alias.</summary>
            <value>The destination alias.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.DestinationExpression">
            <summary>Gets or sets destination expression.</summary>
            <value>The destination expression.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.DestinationName">
            <summary>Gets or sets the name of the destination.</summary>
            <value>The name of the destination.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.DestinationOrdinal">
            <summary>Gets or sets destination ordinal.</summary>
            <value>The destination ordinal.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.Direction">
            <summary>Gets or sets the direction.</summary>
            <value>The direction.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.FormulaInsert">
            <summary>Gets or sets the formula insert.</summary>
            <value>The formula insert.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.FormulaType">
            <summary>Gets or sets the type of the formula.</summary>
            <value>The type of the formula.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.FormulaUpdate">
            <summary>Gets or sets the formula update.</summary>
            <value>The formula update.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.FormulaPrimaryKeyDelete">
            <summary>Gets or sets the formula update.</summary>
            <value>The formula update.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.FormulaPrimaryKeyMerge">
            <summary>Gets or sets the formula update.</summary>
            <value>The formula update.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.FormulaPrimaryKeySynchronize">
            <summary>
                Gets or sets the formula primary key synchronize.
            </summary>
            <value>The formula primary key synchronize.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.FormulaPrimaryKeyUpdate">
            <summary>Gets or sets the formula update.</summary>
            <value>The formula update.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.IsIdentity">
            <summary>Gets or sets a value indicating whether this object is identity.</summary>
            <value>true if this object is identity, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.IsPrimaryKey">
            <summary>Gets or sets a value indicating whether this object is primary key.</summary>
            <value>true if this object is primary key, false if not.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.SourceName">
            <summary>Gets or sets the name of the source.</summary>
            <value>The name of the source.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.SourceOrdinal">
            <summary>Gets or sets source ordinal.</summary>
            <value>The source ordinal.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.SourceExpression">
            <summary>Gets or sets source expression.</summary>
            <value>The source expression.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.SourceValue">
            <summary>Gets or sets source value.</summary>
            <value>The source value.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.SourceValueFactory">
            <summary>Gets or sets source value factory.</summary>
            <value>The source value factory.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.DefaultValueResolution">
            <summary>Gets or sets the default value resolution.</summary>
            <value>The default value resolution.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.DefaultValue">
            <summary>Gets or sets the default value.</summary>
            <value>The default value.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping.DefaultValueSql">
            <summary>Gets or sets the default value SQL.</summary>
            <value>The default value SQL.</value>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor">
            <summary>Inherit constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.Int32,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping.#ctor(System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="T:Z.BulkOperations.ErrorModeType">
            <summary>Values that represent error mode types.</summary>
        </member>
        <member name="F:Z.BulkOperations.ErrorModeType.ThrowException">
            <summary>An enum constant representing the throw exception option.</summary>
        </member>
        <member name="F:Z.BulkOperations.ErrorModeType.IgnoreAndContinue">
            <summary>An enum constant representing the ignore and continue option.</summary>
        </member>
        <member name="F:Z.BulkOperations.ErrorModeType.RetrySingleAndContinue">
            <summary>An enum constant representing the retry single and continue option.</summary>
        </member>
        <member name="T:Z.BulkOperations.BulkOperationError">
            <summary>A bulk operation error.</summary>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationError.Exception">
            <summary>Gets or sets the exception.</summary>
            <value>The exception.</value>
        </member>
        <member name="P:Z.BulkOperations.BulkOperationError.Record">
            <summary>Gets or sets the record.</summary>
            <value>The record.</value>
        </member>
        <member name="T:Z.BulkOperations.ColumnMappingAuditModeType">
            <summary>Values that represent ColumnMappingAuditModeType.</summary>
        </member>
        <member name="F:Z.BulkOperations.ColumnMappingAuditModeType.Inherit">
            <summary>An enum constant representing the inherit option.</summary>
        </member>
        <member name="F:Z.BulkOperations.ColumnMappingAuditModeType.Include">
            <summary>An enum constant representing the include option.</summary>
        </member>
        <member name="F:Z.BulkOperations.ColumnMappingAuditModeType.Exclude">
            <summary>An enum constant representing the exclude option.</summary>
        </member>
        <member name="T:Z.BulkOperations.ColumnMappingDirectionType">
            <summary>Values that represent ColumnMappingDirectionType.</summary>
        </member>
        <member name="T:Z.BulkOperations.ColumnMappingFormulaType">
            <summary>Values that represent ColumnMappingFormulaType.</summary>
        </member>
        <member name="T:Z.BulkOperations.ColumnMapping`1">
            <summary>An advanced column mapping.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor">
            <summary>Inherit constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Int32,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key, false if not.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMapping`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>Constructor.</summary>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping`1.SourceExpression">
            <summary>Gets or sets source expression.</summary>
            <value>The source expression.</value>
        </member>
        <member name="P:Z.BulkOperations.ColumnMapping`1.DestinationExpression">
            <summary>Gets or sets destination expression.</summary>
            <value>The destination expression.</value>
        </member>
        <member name="M:Z.BulkOperations.CustomProvider.#ctor(Z.BulkOperations.ProviderType)">
            <summary>Constructor.</summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="P:Z.BulkOperations.CustomProvider.SetBindByName">
            <summary>Gets or sets the name of the set bind by.</summary>
            <value>The name of the set bind by.</value>
        </member>
        <member name="P:Z.BulkOperations.CustomProvider.ExecuteArray">
            <summary>Gets or sets an array of executes.</summary>
            <value>An Array of executes.</value>
        </member>
        <member name="P:Z.BulkOperations.CustomProvider.SetArrayBindCount">
            <summary>Gets or sets the number of set array binds.</summary>
            <value>The number of set array binds.</value>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.Int32,System.Int32)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.Int32,System.Int32,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping},System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Int32,System.Int32)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Int32,System.Int32,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32,System.Boolean)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.BasicColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.Int32,System.Int32)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.Int32,System.Int32,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping},System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <param name="list">The list to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,System.String)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Int32,System.Int32)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Int32,System.String)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,System.Int32)">
            <summary>Constructor.</summary>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Int32,System.Int32,System.Boolean)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Int32,System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.String,System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceName">Name of the source.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Int32,System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceOrdinal">Source ordinal.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="columnExpression">The column expression.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32,System.Boolean)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationOrdinal">Destination ordinal.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Boolean)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Z.BulkOperations.ColumnMappingExtensions.Add``1(System.Collections.Generic.List{Z.BulkOperations.ColumnMapping{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Boolean,Z.BulkOperations.ColumnMappingDirectionType)">
            <summary>A List&lt;ColumnMapping&lt;T&gt;&gt; extension method that adds list.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="list">The list to act on.</param>
            <param name="sourceExpression">Source expression.</param>
            <param name="destinationName">Name of the destination.</param>
            <param name="isPrimaryKey">true if this object is primary key.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="T:Z.BulkOperations.InternalTransactionType">
            <summary>Values that represent InternalTransactionType.</summary>
        </member>
        <member name="T:Z.BulkOperations.LicenseManager">
            <summary>Manager for licenses.</summary>
        </member>
        <member name="M:Z.BulkOperations.LicenseManager.ValidateLicense(Z.BulkOperations.ProviderType)">
            <summary>Validates the license.</summary>
            <param name="provider">The provider.</param>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Z.BulkOperations.LicenseManager.ValidateLicense(System.String@,Z.BulkOperations.ProviderType,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Validates the license.</summary>
            <param name="provider">The provider.</param>
            <param name="isEntityFramework">true if this object is entity framework.</param>
            <param name="isDapper">true if this object is dapper.</param>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Z.BulkOperations.LicenseManager.AddLicense(System.String,System.String)">
            <summary>Adds a license key (Multiple license key can be added to activate different product or provider).</summary>
            <param name="licenseName">Name of the license.</param>
            <param name="licenseKey">The license key.</param>
        </member>
        <member name="T:Z.BulkOperations.ProviderType">
            <summary>Values that represent Provider.</summary>
        </member>
        <member name="T:Z.BulkOperations.ResolutionType">
            <summary>Values that represent ResolutionType.</summary>
        </member>
        <member name="M:DbContextExtensions.BatchSaveChanges(System.Data.Entity.DbContext)">
            <summary>
                A DbContext extension method that BatchSaveChanges (batches EF commands in
                fewer commands to reduce the number of database round-trip).
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>The number of entities modified.</returns>
        </member>
        <member name="M:DbContextExtensions.BatchSaveChanges(System.Data.Entity.DbContext,System.Action{Z.EntityFramework.Extensions.Shared.BatchSaveChanges.BatchSaveChangesOptions})">
            <summary>
                A DbContext extension method that BatchSaveChanges (batches EF commands in
                fewer commands to reduce the number of database round-trip).
            </summary>
            <param name="this">The @this to act on.</param>
            <param name="batchSaveChangesOptionsFactory">The options to apply in the BatchSaveChanges.</param>
            <returns>The number of entities modified.</returns>
        </member>
        <member name="M:DbContextExtensions.BatchSaveChangesAsync(System.Data.Entity.DbContext)">
            <summary>
                A DbContext extension method that BatchSaveChanges asynchronously (batches EF commands in
                fewer commands to reduce the number of database round-trip).
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>An asynchronous result that return the number of entities modified.</returns>
        </member>
        <member name="M:DbContextExtensions.BatchSaveChangesAsync(System.Data.Entity.DbContext,System.Threading.CancellationToken)">
            <summary>
                A DbContext extension method that BatchSaveChanges asynchronously (batches EF commands in
                fewer commands to reduce the number of database round-trip).
            </summary>
            <param name="this">The @this to act on.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An asynchronous result that return the number of entities modified.</returns>
        </member>
        <member name="M:DbContextExtensions.BatchSaveChangesAsync(System.Data.Entity.DbContext,System.Action{Z.EntityFramework.Extensions.Shared.BatchSaveChanges.BatchSaveChangesOptions})">
            <summary>
                A DbContext extension method that BatchSaveChanges asynchronously (batches EF commands in
                fewer commands to reduce the number of database round-trip).
            </summary>
            <param name="this">The @this to act on.</param>
            <param name="batchSaveChangesOptionsFactory">The options to apply in the BatchSaveChanges.</param>
            <returns>An asynchronous result that return the number of entities modified.</returns>
        </member>
        <member name="M:DbContextExtensions.BatchSaveChangesAsync(System.Data.Entity.DbContext,System.Action{Z.EntityFramework.Extensions.Shared.BatchSaveChanges.BatchSaveChangesOptions},System.Threading.CancellationToken)">
            <summary>
                A DbContext extension method that BatchSaveChanges asynchronously (batches EF commands in
                fewer commands to reduce the number of database round-trip).
            </summary>
            <param name="this">The @this to act on.</param>
            <param name="batchSaveChangesOptionsFactory">The options to apply in the BatchSaveChanges.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An asynchronous result that return the number of entities modified.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDelete``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:DbContextExtensions.BulkDelete``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsert``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:DbContextExtensions.BulkInsert``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMerge``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:DbContextExtensions.BulkMerge``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronize``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronize``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdate``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:DbContextExtensions.BulkUpdate``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.DeleteFromQuery``1(System.Linq.IQueryable{``0})">
            <summary>
                An IQueryable&lt;TEntity&gt; extension method that deletes from query described by
                query.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.DeleteFromQuery``1(System.Linq.IQueryable{``0},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>
                An IQueryable&lt;TEntity&gt; extension method that deletes from query described by query.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.DeleteFromQueryAsync``1(System.Linq.IQueryable{``0})">
            <summary>
                An IQueryable&lt;TEntity&gt; extension method that deletes from query described by
                query.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.DeleteFromQueryAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            An IQueryable&lt;TEntity&gt; extension method that deletes from query described by query.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.DeleteFromQueryAsync``1(System.Linq.IQueryable{``0},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>
                An IQueryable&lt;TEntity&gt; extension method that deletes from query described by
                query.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.DeleteFromQueryAsync``1(System.Linq.IQueryable{``0},System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>
            An IQueryable&lt;TEntity&gt; extension method that deletes from query described by query.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Dynamic.ExpandoObject)">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="expandoObject">The expandoObject.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Dynamic.ExpandoObject,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="expandoObject">The expandoObject.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="dictionary">The dictionary.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="dictionary">The dictionary.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQuery``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}},System.Threading.CancellationToken)">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}},System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Dynamic.ExpandoObject)">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="expandoObject">The expandoObject.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Dynamic.ExpandoObject,System.Threading.CancellationToken)">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="expandoObject">The expandoObject.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Dynamic.ExpandoObject,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="expandoObject">The expandoObject.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Dynamic.ExpandoObject,System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="expandoObject">The expandoObject.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="dictionary">The dictionary.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="dictionary">The dictionary.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="dictionary">The dictionary.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="dictionary">The dictionary.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Threading.CancellationToken)">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Z.BulkOperations.BulkOperation})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.UpdateFromQueryAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="updateExpression">The update expression.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChanges(System.Data.Entity.DbContext)">
            <summary>A DbContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChanges(System.Data.Entity.DbContext,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk save changes.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="this">The @this to act on.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.DbContext)">
            <summary>A DbContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.DbContext,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.DbContext,System.Boolean)">
            <summary>A DbContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
            <param name="useEntityFrameworkPropagation">true to use entity framework propagation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.DbContext,System.Boolean,System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
            <param name="useEntityFrameworkPropagation">true to use entity framework propagation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.DbContext,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk save changes.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="this">The @this to act on.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.DbContext,System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.DbContext,System.Boolean,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>A DbContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
            <param name="useEntityFrameworkPropagation">true to use entity framework propagation.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.DbContext,System.Boolean,System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
            <param name="useEntityFrameworkPropagation">true to use entity framework propagation.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.MySqlDatabase(System.Data.Entity.DbContext)">
            <summary>Create a specialized database instance for this context.</summary>
            <param name="this">The @this to act on.</param>
            <returns>A MySqlDatabase.</returns>
        </member>
        <member name="M:DbContextExtensions.OracleDevArtDatabase(System.Data.Entity.DbContext)">
            <summary>Create a specialized database instance for this context.</summary>
            <param name="this">The @this to act on.</param>
            <returns>A MySqlDatabase.</returns>
        </member>
        <member name="M:DbContextExtensions.SqlCeDatabase(System.Data.Entity.DbContext)">
            <summary>Create a specialized database instance for this context.</summary>
            <param name="this">The @this to act on.</param>
            <returns>A SqlCeDatabase.</returns>
        </member>
        <member name="M:DbContextExtensions.SqlDatabase(System.Data.Entity.DbContext)">
            <summary>Create a specialized database instance for this context.</summary>
            <param name="this">The @this to act on.</param>
            <returns>A SqlDatabase.</returns>
        </member>
        <member name="M:DbContextExtensions.SQLiteDatabase(System.Data.Entity.DbContext)">
            <summary>Create a specialized database instance for this context.</summary>
            <param name="this">The @this to act on.</param>
            <returns>A SQLiteDatabase.</returns>
        </member>
        <member name="M:DbContextExtensions.InsertFromQuery``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="selectFieldsExpression">The select fields expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.InsertFromQuery``1(System.Linq.IQueryable{``0},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="tableName">The destination table name.</param>
            <param name="selectFieldsExpression">The select fields expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.InsertFromQuery``1(System.Linq.IQueryable{``0},System.String,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="schemaName">The destination schema name.</param>
            <param name="tableName">The destination table name.</param>
            <param name="selectFieldsExpression">The select fields expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.InsertFromQuery``1(System.Linq.IQueryable{``0},System.String,System.String,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that updates from query.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="databaseName">The destination database name.</param>
            <param name="schemaName">The destination schema name.</param>
            <param name="tableName">The destination table name.</param>
            <param name="selectFieldsExpression">The select fields expression.</param>
            <returns>The number of row affected.</returns>
        </member>
        <member name="M:DbContextExtensions.GetModel(System.Data.Entity.DbContext)">
            <summary>A DbContext extension method that gets a model.</summary>
            <param name="this">The @this to act on.</param>
            <returns>The model.</returns>
        </member>
        <member name="M:DbContextExtensions.GetObjectContext(System.Data.Entity.DbContext)">
            <summary>A DbContext extension method that gets object context.</summary>
            <param name="this">The @this to act on.</param>
            <returns>The object context.</returns>
        </member>
        <member name="M:DbContextExtensions.ToDataReader``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that converts this object to a data table.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="list">The list.</param>
            <returns>The given data converted to a DataTable.</returns>
        </member>
        <member name="M:DbContextExtensions.ToDataReader``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Type,System.Boolean,System.Boolean)">
            <summary>A DbContext extension method that converts this object to a data table.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="list">The list.</param>
            <param name="type">The type.</param>
            <returns>The given data converted to a DataTable.</returns>
        </member>
        <member name="M:DbContextExtensions.ToDataReader``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean,System.Boolean)">
            <summary>A DbContext extension method that converts this object to a data table.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="list">The list.</param>
            <param name="type">The type.</param>
            <returns>The given data converted to a DataTable.</returns>
        </member>
        <member name="M:DbContextExtensions.ToDataSet``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that converts this object to a data set.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="list">The list.</param>
            <returns>The given data converted to a DataSet.</returns>
        </member>
        <member name="M:DbContextExtensions.ToDataSet``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>A DbContext extension method that converts this object to a data set.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="list">The list.</param>
            <param name="includeInheritance">true to include, false to exclude the inheritance.</param>
            <returns>The given data converted to a DataSet.</returns>
        </member>
        <member name="M:DbContextExtensions.ToDataSet``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Type,System.Boolean)">
            <summary>A DbContext extension method that converts this object to a data set.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="items">The items.</param>
            <param name="type">The type.</param>
            <param name="includeInheritance">true to include, false to exclude the inheritance.</param>
            <returns>The given data converted to a DataSet.</returns>
        </member>
        <member name="M:DbContextExtensions.ToDataTable``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that converts this object to a data table.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="list">The list.</param>
            <returns>The given data converted to a DataTable.</returns>
        </member>
        <member name="M:DbContextExtensions.ToDataTable``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.Type,System.Boolean,System.Boolean)">
            <summary>A DbContext extension method that converts this object to a data table.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="list">The list.</param>
            <param name="type">The type.</param>
            <returns>The given data converted to a DataTable.</returns>
        </member>
        <member name="M:DbContextExtensions.ToDataTable``1(System.Data.Entity.DbContext,System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean,System.Boolean)">
            <summary>A DbContext extension method that converts this object to a data table.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="list">The list.</param>
            <param name="type">The type.</param>
            <returns>The given data converted to a DataTable.</returns>
        </member>
        <member name="M:DbContextExtensions.GetContext``1(System.Linq.IQueryable{``0})">
            <summary>An IQueryable&lt;TEntity&gt; extension method that gets a context.</summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="query">The query to act on.</param>
            <returns>The context.</returns>
        </member>
        <member name="M:DbContextExtensions.GetDbContext(System.Data.Entity.Core.Objects.ObjectContext)">
            <summary>A DbContext extension method that gets a model.</summary>
            <param name="this">The @this to act on.</param>
            <returns>The model.</returns>
        </member>
        <member name="M:DbContextExtensions.ExecuteFutureAction``1(``0)">
            <summary>A T extension method that executes the future action.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
        </member>
        <member name="M:DbContextExtensions.FutureAction``1(``0,System.Action{``0})">
            <summary>A T extension method that future action.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:DbContextExtensions.BulkDelete``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:DbContextExtensions.BulkDelete``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkDeleteAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsert``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:DbContextExtensions.BulkInsert``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkInsertAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMerge``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:DbContextExtensions.BulkMerge``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkMergeAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BatchSaveChanges(System.Data.Entity.Core.Objects.ObjectContext)">
            <summary>
                An ObjectContext extension method that BatchSaveChanges (batches EF commands in
                fewer commands to reduce the number of database round-trip).
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>The number of entities modified.</returns>
        </member>
        <member name="M:DbContextExtensions.BatchSaveChanges(System.Data.Entity.Core.Objects.ObjectContext,System.Data.Entity.Core.Objects.SaveOptions)">
            <summary>
            An ObjectContext extension method that BatchSaveChanges (batches EF commands in fewer
            commands to reduce the number of database round-trip).
            </summary>
            <param name="this">The @this to act on.</param>
            <param name="saveOptions">Options for controlling the save.</param>
            <returns>The number of entities modified.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChanges(System.Data.Entity.Core.Objects.ObjectContext)">
            <summary>An ObjectContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChanges(System.Data.Entity.Core.Objects.ObjectContext,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>An ObjectContext extension method that bulk save changes.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="this">The @this to act on.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:DbContextExtensions.BatchSaveChangesAsync(System.Data.Entity.Core.Objects.ObjectContext)">
            <summary>
                An ObjectContext extension method that BatchSaveChanges asynchronously (batches EF commands in
                fewer commands to reduce the number of database round-trip).
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>An asynchronous result that return the number of entities modified.</returns>
        </member>
        <member name="M:DbContextExtensions.BatchSaveChangesAsync(System.Data.Entity.Core.Objects.ObjectContext,System.Threading.CancellationToken)">
            <summary>
                An ObjectContext extension method that BatchSaveChanges asynchronously (batches EF commands in
                fewer commands to reduce the number of database round-trip).
            </summary>
            <param name="this">The @this to act on.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An asynchronous result that return the number of entities modified.</returns>
        </member>
        <member name="M:DbContextExtensions.BatchSaveChangesAsync(System.Data.Entity.Core.Objects.ObjectContext,System.Data.Entity.Core.Objects.SaveOptions)">
            <summary>
            An ObjectContext extension method that BatchSaveChanges asynchronously (batches EF commands
            in fewer commands to reduce the number of database round-trip).
            </summary>
            <param name="this">The @this to act on.</param>
            <param name="saveOptions">Options for controlling the save.</param>
            <returns>An asynchronous result that return the number of entities modified.</returns>
        </member>
        <member name="M:DbContextExtensions.BatchSaveChangesAsync(System.Data.Entity.Core.Objects.ObjectContext,System.Data.Entity.Core.Objects.SaveOptions,System.Threading.CancellationToken)">
            <summary>
            An ObjectContext extension method that BatchSaveChanges asynchronously (batches EF commands
            in fewer commands to reduce the number of database round-trip).
            </summary>
            <param name="this">The @this to act on.</param>
            <param name="saveOptions">Options for controlling the save.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An asynchronous result that return the number of entities modified.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.Core.Objects.ObjectContext)">
            <summary>An ObjectContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.Core.Objects.ObjectContext,System.Threading.CancellationToken)">
            <summary>An ObjectContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.Core.Objects.ObjectContext,System.Boolean)">
            <summary>An ObjectContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
            <param name="useEntityFrameworkPropagation">true to use entity framework propagation.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.Core.Objects.ObjectContext,System.Boolean,System.Threading.CancellationToken)">
            <summary>An ObjectContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
            <param name="useEntityFrameworkPropagation">true to use entity framework propagation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.Core.Objects.ObjectContext,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>An ObjectContext extension method that bulk save changes.</summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="this">The @this to act on.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.Core.Objects.ObjectContext,System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>An ObjectContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.Core.Objects.ObjectContext,System.Boolean,System.Action{Z.BulkOperations.BulkOperation})">
            <summary>An ObjectContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
            <param name="useEntityFrameworkPropagation">true to use entity framework propagation.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSaveChangesAsync(System.Data.Entity.Core.Objects.ObjectContext,System.Boolean,System.Action{Z.BulkOperations.BulkOperation},System.Threading.CancellationToken)">
            <summary>An ObjectContext extension method that bulk save changes.</summary>
            <param name="this">The @this to act on.</param>
            <param name="useEntityFrameworkPropagation">true to use entity framework propagation.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronize``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronize``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkSynchronizeAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdate``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:DbContextExtensions.BulkUpdate``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.BulkUpdateAsync``1(System.Data.Entity.Core.Objects.ObjectContext,System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>A DbContext extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:DbContextExtensions.Add(System.Collections.Generic.List{Z.EntityFramework.Extensions.SelfHierarchyListColumnMapping},System.String,System.String)">
            <summary>
            A List&lt;SelfHierarchyListColumnMapping&gt; extension method that adds columnMappings.
            </summary>
            <param name="columnMappings">The columnMappings to act on.</param>
            <param name="columnName">Name of the column.</param>
            <param name="recursiveColumnName">Name of the recursive column.</param>
        </member>
        <member name="M:DbContextExtensions.ToSelfHierarchyList``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Z.EntityFramework.Extensions.SelfHierarchyListOptions{``0}})">
            <summary>
            An IQueryable&lt;T&gt; extension method that converts this object to a self hierarchy
            list.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="query">The query to act on.</param>
            <param name="joinExpression">The join expression.</param>
            <param name="options">(Optional) Options for controlling the operation.</param>
            <returns>The given data converted to a List&lt;T&gt;</returns>
        </member>
        <member name="M:DbContextExtensions.GetOrCreateDbContext(System.Data.Entity.Core.Objects.ObjectContext)">
            <summary>A DbContext extension method that gets a model.</summary>
            <param name="this">The @this to act on.</param>
            <returns>The model.</returns>
        </member>
        <member name="M:DbContextExtensions.GetRealType(System.Data.Entity.Core.Objects.ObjectContext)">
            <summary>A DbContext extension method that gets a model.</summary>
            <param name="this">The @this to act on.</param>
            <returns>The model.</returns>
        </member>
        <member name="T:IDbSetExtensions">
            <summary>A database set extensions.</summary>
        </member>
        <member name="M:IDbSetExtensions.BulkDelete``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>An IDbSet extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:IDbSetExtensions.BulkDelete``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>An IDbSet extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:IDbSetExtensions.BulkDeleteAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>An IDbSet extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkDeleteAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>An IDbSet extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkDeleteAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>An IDbSet extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkDeleteAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>An IDbSet extension method that bulk delete.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkInsert``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>An IDbSet extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:IDbSetExtensions.BulkInsert``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>An IDbSet extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:IDbSetExtensions.BulkInsertAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>An IDbSet extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkInsertAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>An IDbSet extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkInsertAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>An IDbSet extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkInsertAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>An IDbSet extension method that bulk insert.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkMerge``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>An IDbSet extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:IDbSetExtensions.BulkMerge``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>An IDbSet extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:IDbSetExtensions.BulkMergeAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>An IDbSet extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkMergeAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>An IDbSet extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkMergeAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>An IDbSet extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkMergeAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>An IDbSet extension method that bulk merge.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkSynchronize``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>An IDbSet extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:IDbSetExtensions.BulkSynchronize``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>An IDbSet extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:IDbSetExtensions.BulkSynchronizeAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>An IDbSet extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkSynchronizeAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>An IDbSet extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkSynchronizeAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>An IDbSet extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkSynchronizeAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>An IDbSet extension method that bulk synchronize.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkUpdate``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>An IDbSet extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
        </member>
        <member name="M:IDbSetExtensions.BulkUpdate``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>An IDbSet extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:IDbSetExtensions.BulkUpdateAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}})">
            <summary>An IDbSet extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkUpdateAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Action{Z.EntityFramework.Extensions.EntityBulkOperation{``0}},System.Threading.CancellationToken)">
            <summary>An IDbSet extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="bulkOperationFactory">The bulk operation factory.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkUpdateAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>An IDbSet extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.BulkUpdateAsync``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>An IDbSet extension method that bulk update.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <param name="entities">The entities.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:IDbSetExtensions.DetachRange``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Detach the given collection of entities from the context
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="set">The set to act on.</param>
            <param name="entities">The collection of entities to remove.</param>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:IDbSetExtensions.AddOrUpdateExtension``1(System.Data.Entity.IDbSet{``0},``0[])">
            <summary>
                Adds or updates entities by key when SaveChanges is called. Equivalent to an "upsert" operation from database
                terminology. This method can useful when seeding data using Migrations.
            </summary>
            <remarks>
                When the <paramref name="set" /> parameter is a custom or fake IDbSet implementation, this method will
                attempt to locate and invoke a public, instance method with the same signature as this extension method.
            </remarks>
            <typeparam name="TEntity">TypeName of the entity.</typeparam>
            <param name="set">.</param>
            <param name="entities">The entities to add or update.</param>
        </member>
        <member name="M:IDbSetExtensions.AddOrUpdateExtension``1(System.Data.Entity.IDbSet{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},``0[])">
            <summary>
                Adds or updates entities by a custom identification expression when SaveChanges is called. Equivalent to an
                "upsert" operation from database terminology. This method can useful when seeding data using Migrations.
            </summary>
            <remarks>
                When the <paramref name="set" /> parameter is a custom or fake IDbSet implementation, this method will
                attempt to locate and invoke a public, instance method with the same signature as this extension method.
            </remarks>
            <typeparam name="TEntity">TypeName of the entity.</typeparam>
            <param name="set">.</param>
            <param name="identifierExpression">
                An expression specifying the properties that should be used when determining
                whether an Add or Update operation should be performed.
            </param>
            <param name="entities">The entities to add or update.</param>
        </member>
        <member name="M:IDbSetExtensions.Attach``1(System.Data.Entity.IDbSet{``0},``0,System.Data.Entity.EntityState)">
            <summary>
            Attaches the given entity to the context underlying the set.  That is, the entity is placed
            into the context in the specified state.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="set">The set to act on.</param>
            <param name="entity">The entity to attach.</param>
            <param name="state">The state in which the entity will be after the attach.</param>
            <returns>The entity.</returns>
        </member>
        <member name="M:IDbSetExtensions.AttachRange``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Attach the given collection of entities into context underlying the set with each entity
            being put into the UnChanged state.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="set">The set to act on.</param>
            <param name="entities">The collection of entities to add.</param>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:IDbSetExtensions.AttachRange``1(System.Data.Entity.IDbSet{``0},System.Collections.Generic.IEnumerable{``0},System.Data.Entity.EntityState)">
            <summary>
            Attach the given collection of entities into context underlying the set with each entity
            being put into the specified state.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="set">The set to act on.</param>
            <param name="entities">The collection of entities to add.</param>
            <param name="state">State in which the entities will be attach.</param>
            <returns>The collection of entities.</returns>
        </member>
        <member name="M:DatabaseExtensions.MySqlDatabase(System.Data.Entity.Database)">
            <summary>Create a specialized database instance for this context.</summary>
            <param name="this">The @this to act on.</param>
            <returns>A MySqlDatabase.</returns>
        </member>
        <member name="M:DatabaseExtensions.OracleDevArtDatabase(System.Data.Entity.Database)">
            <summary>Create a specialized database instance for this context.</summary>
            <param name="this">The @this to act on.</param>
            <returns>A OracleDevArtDatabase.</returns>
        </member>
        <member name="M:DatabaseExtensions.SqlCeDatabase(System.Data.Entity.Database)">
            <summary>Create a specialized database instance for this context.</summary>
            <param name="this">The @this to act on.</param>
            <returns>A SqlCeDatabase.</returns>
        </member>
        <member name="M:DatabaseExtensions.SqlDatabase(System.Data.Entity.Database)">
            <summary>Create a specialized database instance for this context.</summary>
            <param name="this">The @this to act on.</param>
            <returns>A SqlDatabase.</returns>
        </member>
        <member name="M:DatabaseExtensions.SQLiteDatabase(System.Data.Entity.Database)">
            <summary>Create a specialized database instance for this context.</summary>
            <param name="this">The @this to act on.</param>
            <returns>A SQLiteDatabase.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSetAsync(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Threading.CancellationToken)">
            <summary>
            A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="this">The @this to act on.</param>
            <param name="commandFactory">The command factory.</param>
            <param name="cancellationToken">(Optional) A token that allows processing to be cancelled.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSetAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <param name="cancellationToken">(Optional) A token that allows processing to be cancelled.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSetAsync(System.Data.Entity.Database,System.String,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="cancellationToken">(Optional) A token that allows processing to be cancelled.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSetAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <param name="cancellationToken">(Optional) A token that allows processing to be cancelled.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSetAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="cancellationToken">(Optional) A token that allows processing to be cancelled.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSetAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <param name="cancellationToken">(Optional) A token that allows processing to be cancelled.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSetAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="cancellationToken">(Optional) A token that allows processing to be cancelled.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSetAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <param name="cancellationToken">(Optional) A token that allows processing to be cancelled.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSetAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="cancellationToken">(Optional) A token that allows processing to be cancelled.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTableAsync(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="commandFactory">The command factory.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTableAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTableAsync(System.Data.Entity.Database,System.String,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTableAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTableAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTableAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTableAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTableAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTableAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesAsync``1(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="commandFactory">The command factory.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesAsync``1(System.Data.Entity.Database,System.String,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesAsync``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesAsync``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>A Generic Type IEnumerable.</returns>
            ]
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMappingAsync``1(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="commandFactory">The command factory.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.g.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityAsync``1(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="commandFactory">The command factory.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityAsync``1(System.Data.Entity.Database,System.String,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityAsync``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityAsync``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMappingAsync``1(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="commandFactory">The command factory.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMappingAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectAsync(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="commandFactory">The command factory.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectAsync(System.Data.Entity.Database,System.String,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectsAsync(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="commandFactory">The command factory.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectsAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectsAsync(System.Data.Entity.Database,System.String,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectsAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectsAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectsAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectsAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectsAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjectsAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQueryAsync(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="commandFactory">The command factory.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQueryAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQueryAsync(System.Data.Entity.Database,System.String,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQueryAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQueryAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQueryAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQueryAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQueryAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQueryAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReaderAsync(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="commandFactory">The command factory.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReaderAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReaderAsync(System.Data.Entity.Database,System.String,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReaderAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReaderAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReaderAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReaderAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReaderAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReaderAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsync(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="commandFactory">The command factory.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsync(System.Data.Entity.Database,System.String,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsAsync``1(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="commandFactory">The command factory.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsAsync``1(System.Data.Entity.Database,System.String,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsAsync``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsAsync``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAsAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            m&gt;
            <param name="commandType">Type of the command.</param><returns>An object cast as a Generic Type.</returns></member>
        <member name="M:DatabaseExtensions.ExecuteScalarToAsync``1(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="commandFactory">The command factory.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarToAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarToAsync``1(System.Data.Entity.Database,System.String,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarToAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarToAsync``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarToAsync``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarToAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarToAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarToAsync``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReaderAsync(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Threading.CancellationToken)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="commandFactory">The command factory.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReaderAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReaderAsync(System.Data.Entity.Database,System.String,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReaderAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReaderAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReaderAsync(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReaderAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Threading.CancellationToken)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReaderAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReaderAsync(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Threading.CancellationToken)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSet(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand})">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="commandFactory">The command factory.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSet(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSet(System.Data.Entity.Database,System.String)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSet(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSet(System.Data.Entity.Database,System.String,System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSet(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSet(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[])">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSet(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataSet(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataSet.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A DataSet.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTable(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand})">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="commandFactory">The command factory.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTable(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTable(System.Data.Entity.Database,System.String)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTable(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTable(System.Data.Entity.Database,System.String,System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTable(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTable(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[])">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTable(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteDataTable(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return a DataTable.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A DataTable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntities``1(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand})">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="commandFactory">The command factory.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntities``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntities``1(System.Data.Entity.Database,System.String)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntities``1(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntities``1(System.Data.Entity.Database,System.String,System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntities``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntities``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[])">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>A Generic Type IEnumerable.</returns>
            ]
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntities``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntities``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt;.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMapping``1(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand})">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="commandFactory">The command factory.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMapping``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMapping``1(System.Data.Entity.Database,System.String)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.g.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMapping``1(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMapping``1(System.Data.Entity.Database,System.String,System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMapping``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMapping``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[])">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMapping``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntitiesWithMapping``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;T&gt; using the context
                mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntity``1(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand})">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="commandFactory">The command factory.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntity``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntity``1(System.Data.Entity.Database,System.String)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntity``1(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntity``1(System.Data.Entity.Database,System.String,System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntity``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntity``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[])">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntity``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntity``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return an object of type T.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMapping``1(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand})">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="commandFactory">The command factory.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMapping``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMapping``1(System.Data.Entity.Database,System.String)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMapping``1(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMapping``1(System.Data.Entity.Database,System.String,System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMapping``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMapping``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[])">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMapping``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteEntityWithMapping``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return an entity of type T using the context mapping.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObject(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand})">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="commandFactory">The command factory.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObject(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObject(System.Data.Entity.Database,System.String)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObject(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObject(System.Data.Entity.Database,System.String,System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObject(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObject(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[])">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObject(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObject(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return an ExpandoObject.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An Expando Object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjects(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand})">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="commandFactory">The command factory.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjects(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjects(System.Data.Entity.Database,System.String)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjects(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjects(System.Data.Entity.Database,System.String,System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjects(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjects(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[])">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjects(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteExpandoObjects(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return an IEnumerable&lt;ExpandoObject&gt;.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An Expando Object IEnumerable.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQuery(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand})">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="commandFactory">The command factory.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQuery(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQuery(System.Data.Entity.Database,System.String)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQuery(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQuery(System.Data.Entity.Database,System.String,System.Data.CommandType)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQuery(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQuery(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[])">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQuery(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteNonQuery(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
                A Database extension method that executes a Transact-SQL statement against the connection and returns the number of
                rows affected.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReader(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand},System.Action{System.Data.Common.DbDataReader})">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="commandFactory">The command factory.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReader(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction,System.Action{System.Data.Common.DbDataReader})">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReader(System.Data.Entity.Database,System.String,System.Action{System.Data.Common.DbDataReader})">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReader(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction,System.Action{System.Data.Common.DbDataReader})">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReader(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Action{System.Data.Common.DbDataReader})">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReader(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction,System.Action{System.Data.Common.DbDataReader})">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReader(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Action{System.Data.Common.DbDataReader})">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReader(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction,System.Action{System.Data.Common.DbDataReader})">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteReader(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Action{System.Data.Common.DbDataReader})">
            <summary>
                A Database extension method that executes a SQL statement and invoke an Action with the reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="readerAction">The reader action.</param>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalar(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand})">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="commandFactory">The command factory.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalar(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalar(System.Data.Entity.Database,System.String)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalar(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalar(System.Data.Entity.Database,System.String,System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalar(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalar(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[])">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalar(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalar(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and return a scalar value.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAs``1(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand})">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="commandFactory">The command factory.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAs``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAs``1(System.Data.Entity.Database,System.String)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAs``1(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAs``1(System.Data.Entity.Database,System.String,System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAs``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAs``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[])">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAs``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object cast as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarAs``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and cast the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            m&gt;
            <param name="commandType">Type of the command.</param><returns>An object cast as a Generic Type.</returns></member>
        <member name="M:DatabaseExtensions.ExecuteScalarTo``1(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand})">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="commandFactory">The command factory.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarTo``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarTo``1(System.Data.Entity.Database,System.String)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarTo``1(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarTo``1(System.Data.Entity.Database,System.String,System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarTo``1(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarTo``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[])">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarTo``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteScalarTo``1(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
                A Database extension method that executes a SQL statement and convert the scalar result to a Generic Type.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>An object converted as a Generic Type.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReader(System.Data.Entity.Database,System.Action{System.Data.Common.DbCommand})">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="commandFactory">The command factory.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReader(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReader(System.Data.Entity.Database,System.String)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReader(System.Data.Entity.Database,System.String,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="transaction">The transaction.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReader(System.Data.Entity.Database,System.String,System.Data.CommandType)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReader(System.Data.Entity.Database,System.String,System.Data.CommandType,System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="commandType">Type of the command.</param>
            <param name="transaction">The transaction.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReader(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[])">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReader(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="transaction">The transaction.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.ExecuteXmlReader(System.Data.Entity.Database,System.String,System.Data.Common.DbParameter[],System.Data.CommandType)">
            <summary>
                A Database extension method that execute a SQL statement and return a XML reader.
            </summary>
            <param name="cmdText">The command text.</param>
            <param name="parameters">The command parameters.</param>
            <param name="commandType">Type of the command.</param>
            <returns>A XmlReader.</returns>
        </member>
        <member name="M:DatabaseExtensions.GetConnection``1(System.Data.Entity.Database)">
            <summary>A Database extension method that gets a connection.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <returns>The connection.</returns>
        </member>
        <member name="M:DatabaseExtensions.GetContext``1(System.Data.Entity.Database)">
            <summary>
                A Database extension method that gets the Entity Framework Context.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The @this to act on.</param>
            <returns>The Entity Framework Context.</returns>
        </member>
        <member name="M:DatabaseExtensions.GetDbContext(System.Data.Entity.Database)">
            <summary>
                A Database extension method that gets the Entity Framework DbContext.
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>The EntityFramework DbContext.</returns>
        </member>
        <member name="M:DatabaseExtensions.GetDbTransaction(System.Data.Entity.Database)">
            <summary>
                A Database extension method that gets database transaction.
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>The database transaction.</returns>
        </member>
        <member name="M:DatabaseExtensions.GetDbTransaction(System.Data.Entity.Core.EntityClient.EntityTransaction)">
            <summary>A Database extension method that gets store transaction.</summary>
            <param name="this">The @this to act on.</param>
            <returns>The store transaction.</returns>
        </member>
        <member name="M:DatabaseExtensions.GetEntityConnection(System.Data.Entity.Database)">
            <summary>
                A Database extension method that gets entity connection.
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>The entity connection.</returns>
        </member>
        <member name="M:DatabaseExtensions.GetEntityTransaction(System.Data.Entity.Database)">
            <summary>
                A Database extension method that gets entity transaction.
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>The entity transaction.</returns>
        </member>
        <member name="M:DatabaseExtensions.GetTransaction``1(System.Data.Entity.Database)">
            <summary>
                A Database extension method that gets database transaction.
            </summary>
            <param name="this">The @this to act on.</param>
            <returns>The database transaction.</returns>
        </member>
        <member name="M:DatabaseExtensions.GetTransaction``1(System.Data.Entity.Core.EntityClient.EntityTransaction)">
            <summary>A Database extension method that gets store transaction.</summary>
            <param name="this">The @this to act on.</param>
            <returns>The store transaction.</returns>
        </member>
        <member name="M:DbSetExtensions.DeleteByKeyAsync``2(System.Data.Entity.DbSet{``0},``1)">
            <summary>
                A DbSet&lt;TEntity&gt; extension method that delete an entity by using value from an existing entity or
                directly key values. It is a direct operation, so doesn't requires to call SaveChanges.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="dbSet">The dbSet to act on.</param>
            <param name="entityOrKeyValue">The entity or key value.</param>
            <returns>The number of record affected.</returns>
        </member>
        <member name="M:DbSetExtensions.DeleteByKeyAsync``1(System.Data.Entity.DbSet{``0},System.Object[])">
            <summary>
                A DbSet&lt;TEntity&gt; extension method that delete an entity by using value from an existing entity or
                directly key values. It is a direct operation, so doesn't requires to call SaveChanges.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="dbSet">The dbSet to act on.</param>
            <param name="keyValues">A variable-length parameters list containing key values.</param>
            <returns>The number of record affected.</returns>
        </member>
        <member name="M:DbSetExtensions.DeleteByKeyAsync``2(System.Data.Entity.DbSet{``0},System.Threading.CancellationToken,``1)">
            <summary>
                A DbSet&lt;TEntity&gt; extension method that delete an entity by using value from an existing
                entity or directly key values. It is a direct operation, so doesn't requires to call
                SaveChanges.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="dbSet">The dbSet to act on.</param>
            <param name="cancellationToken">A token that allows processing to be cancelled.</param>
            <param name="entityOrKeyValue">The entity or key value.</param>
            <returns>The number of record affected.</returns>
        </member>
        <member name="M:DbSetExtensions.DeleteByKeyAsync``1(System.Data.Entity.DbSet{``0},System.Threading.CancellationToken,System.Object[])">
            <summary>
                A DbSet&lt;TEntity&gt; extension method that delete an entity by using value from an existing
                entity or directly key values. It is a direct operation, so doesn't requires to call
                SaveChanges.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="dbSet">The dbSet to act on.</param>
            <param name="cancellationToken">A token that allows processing to be cancelled.</param>
            <param name="keyValues">A variable-length parameters list containing key values.</param>
            <returns>The number of record affected.</returns>
        </member>
        <member name="M:DbSetExtensions.DeleteRangeByKeyAsync``2(System.Data.Entity.DbSet{``0},System.Collections.Generic.IEnumerable{``1})">
            <summary>
                A DbSet&lt;TEntity&gt; extension method that delete multiple entities by using value from an existing
                entities. It is a direct operation, so doesn't requires to call SaveChanges.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="dbSet">The dbSet to act on.</param>
            <param name="entities">The entities.</param>
            <returns>The number of record affected.</returns>
        </member>
        <member name="M:DbSetExtensions.DeleteRangeByKeyAsync``2(System.Data.Entity.DbSet{``0},System.Threading.CancellationToken,System.Collections.Generic.IEnumerable{``1})">
            <summary>
            A DbSet&lt;TEntity&gt; extension method that delete multiple entities by using value from an
            existing entities. It is a direct operation, so doesn't requires to call SaveChanges.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="dbSet">The dbSet to act on.</param>
            <param name="cancellationToken">A token that allows processing to be cancelled.</param>
            <param name="entities">The entities.</param>
            <returns>The number of record affected.</returns>
        </member>
        <member name="M:DbSetExtensions.DeleteRangeByKey``2(System.Data.Entity.DbSet{``0},System.Collections.Generic.IEnumerable{``1})">
            <summary>
                A DbSet&lt;TEntity&gt; extension method that delete multiple entities by using value from an existing
                entities. It is a direct operation, so doesn't requires to call SaveChanges.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="dbSet">The dbSet to act on.</param>
            <param name="entities">The entities.</param>
            <returns>The number of record affected.</returns>
        </member>
        <member name="M:DbSetExtensions.DeleteByKey``2(System.Data.Entity.DbSet{``0},``1)">
            <summary>
                A DbSet&lt;TEntity&gt; extension method that delete an entity by using value from an existing entity or
                directly key values. It is a direct operation, so doesn't requires to call SaveChanges.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="dbSet">The dbSet to act on.</param>
            <param name="entityOrKeyValue">The entity or key value.</param>
            <returns>The number of record affected.</returns>
        </member>
        <member name="M:DbSetExtensions.DeleteByKey``1(System.Data.Entity.DbSet{``0},System.Object[])">
            <summary>
                A DbSet&lt;TEntity&gt; extension method that delete an entity by using value from an existing entity or
                directly key values. It is a direct operation, so doesn't requires to call SaveChanges.
            </summary>
            <typeparam name="TEntity">Type of the entity.</typeparam>
            <param name="dbSet">The dbSet to act on.</param>
            <param name="keyValues">A variable-length parameters list containing key values.</param>
            <returns>The number of record affected.</returns>
        </member>
        <member name="M:QueryHookExtensions.HookExecuting``1(System.Linq.IQueryable{``0},System.Action{System.Data.Common.DbCommand,System.Data.Entity.DbContext})">
            <summary>An IQueryable&lt;T&gt; extension method that add an executing hook to the current query.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The query to act on.</param>
            <param name="action">The executing action.</param>
            <returns>The IQueryable&lt;T&gt; with the executing hook added.</returns>
        </member>
        <member name="M:QueryHookExtensions.Hook``1(System.Linq.IQueryable{``0},Z.EntityFramework.Extensions.IQueryHook)">
            <summary>An IQueryable&lt;T&gt; extension method that add an hook to the current query.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="this">The query to act on.</param>
            <param name="hook">The hook that inherit from IQueryHook.</param>
            <returns>The IQueryable&lt;T&gt; with the hook added.</returns>
        </member>
    </members>
</doc>